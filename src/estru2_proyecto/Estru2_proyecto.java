/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package estru2_proyecto;

import java.awt.HeadlessException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.NumberFormatter;

/**
 *
 * @author hriverav
 */
public class Estru2_proyecto extends javax.swing.JFrame {

    /**
     * Creates new form Estru2_proyecto
     */
    public Estru2_proyecto() {
        initComponents();
        buttonGroup_Campos_Dato.add(jRadioButton_Campos_Bool);
        buttonGroup_Campos_Dato.add(jRadioButton_Campos_Int);
        buttonGroup_Campos_Dato.add(jRadioButton_Campos_Char);
        buttonGroup_Campos_Dato.add(jRadioButton_Campos_String);
        buttonGroup_Campos_Dato.add(jRadioButton_Campos_Float);
        buttonGroup_Campos_Llave.add(jRadioButton_Campos_Si);
        buttonGroup_Campos_Llave.add(jRadioButton_Campos_No);
        buttonGroup_ModificarLlave.add(jRadioButton_Campos_Modificar_Si);
        buttonGroup_ModificarLlave.add(jRadioButton_Campos_Modificar_No);
        buttonGroup_ModificarTipo.add(jRadioButton_Campos_Modificar_Int);
        buttonGroup_ModificarTipo.add(jRadioButton_Campos_Modificar_Bool);
        buttonGroup_ModificarTipo.add(jRadioButton_Campos_Modificar_Char);
        buttonGroup_ModificarTipo.add(jRadioButton_Campos_Modificar_Float);
        buttonGroup_ModificarTipo.add(jRadioButton_Campos_Modificar_String);
        buttonGroup_EliminarLlave.add(jRadioButton_Campos_Eliminar_Si);
        buttonGroup_EliminarLlave.add(jRadioButton_Campos_Eliminar_No);
        buttonGroup_EliminarTipo.add(jRadioButton_Campos_Eliminar_Int);
        buttonGroup_EliminarTipo.add(jRadioButton_Campos_Eliminar_Bool);
        buttonGroup_EliminarTipo.add(jRadioButton_Campos_Eliminar_Char);
        buttonGroup_EliminarTipo.add(jRadioButton_Campos_Eliminar_Float);
        buttonGroup_EliminarTipo.add(jRadioButton_Campos_Eliminar_String);
        jPanel_Archivo_crear.setVisible(false);
        this.setLocationRelativeTo(null);

        File folder = new File("./ArbolesB/");
        File[] files = folder.listFiles();
        DefaultListModel model = new DefaultListModel<String>();
        for (File file : files) {
            if (file.getName().endsWith(".dat")) {
                model.add(model.size(), file.getName());
            }
        }
        jList_Indices_ReIndexar.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup_Campos_Dato = new javax.swing.ButtonGroup();
        buttonGroup_Campos_Llave = new javax.swing.ButtonGroup();
        jDialog_Campos_Crear = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel_Campos_Longitud = new javax.swing.JLabel();
        jTextField_Campos_Nombre = new javax.swing.JTextField();
        jLabel_Campos_Dato = new javax.swing.JLabel();
        jSpinner_Campos_Longitud = new javax.swing.JSpinner();
        jLabel_Campos_Key = new javax.swing.JLabel();
        jRadioButton_Campos_Bool = new javax.swing.JRadioButton();
        jRadioButton_Campos_Int = new javax.swing.JRadioButton();
        jRadioButton_Campos_Si = new javax.swing.JRadioButton();
        jRadioButton_Campos_Float = new javax.swing.JRadioButton();
        jRadioButton_Campos_No = new javax.swing.JRadioButton();
        jRadioButton_Campos_String = new javax.swing.JRadioButton();
        jLabel_Campos_CrearCampo = new javax.swing.JLabel();
        jRadioButton_Campos_Char = new javax.swing.JRadioButton();
        jLabel_Campos_Nombre = new javax.swing.JLabel();
        jButton_Campos_Regresar = new javax.swing.JButton();
        jButton_Campos_CrearCampo = new javax.swing.JButton();
        jDialog_Campos_Listar = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jLabel_Campos_CrearCampo1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Campos_Listar = new javax.swing.JTable();
        jButton_Campos_Listar_Regresar = new javax.swing.JButton();
        jDialog_Campos_Modificar = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jLabel_Campos_ModificarCampo = new javax.swing.JLabel();
        jButton_Campos_Modificat_Confirmar = new javax.swing.JButton();
        jButton_Campos_Modificar_Regresar = new javax.swing.JButton();
        jRadioButton_Campos_Modificar_Char = new javax.swing.JRadioButton();
        jLabel_Campos_Modificar_Nombre = new javax.swing.JLabel();
        jRadioButton_Campos_Modificar_Bool = new javax.swing.JRadioButton();
        jRadioButton_Campos_Modificar_Si = new javax.swing.JRadioButton();
        jLabel_Campos_Modificar_Dato = new javax.swing.JLabel();
        jLabel_Campos_Modificar_Longitud = new javax.swing.JLabel();
        jSpinner_Campos_Modificar_Longitud = new javax.swing.JSpinner();
        jRadioButton_Campos_Modificar_Int = new javax.swing.JRadioButton();
        jRadioButton_Campos_Modificar_Float = new javax.swing.JRadioButton();
        jLabel_Campos_Modificar_Key = new javax.swing.JLabel();
        jRadioButton_Campos_Modificar_String = new javax.swing.JRadioButton();
        jRadioButton_Campos_Modificar_No = new javax.swing.JRadioButton();
        jTextField_Campos_Modificar_Nombre = new javax.swing.JTextField();
        jComboBox_Modificar = new javax.swing.JComboBox<>();
        buttonGroup_ModificarTipo = new javax.swing.ButtonGroup();
        buttonGroup_ModificarLlave = new javax.swing.ButtonGroup();
        jDialog_Campos_Eliminar = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jButton_Campos_Eliminar_Regresar = new javax.swing.JButton();
        jLabel_Campos_Eliminar_Key = new javax.swing.JLabel();
        jButton_Campos_Eliminar_Confirmar = new javax.swing.JButton();
        jRadioButton_Campos_Eliminar_Si = new javax.swing.JRadioButton();
        jRadioButton_Campos_Eliminar_Float = new javax.swing.JRadioButton();
        jLabel_Campos_Eliminar_Campo = new javax.swing.JLabel();
        jLabel_Campos_Eliminar_Longitud = new javax.swing.JLabel();
        jRadioButton_Campos_Eliminar_Int = new javax.swing.JRadioButton();
        jLabel_Campos_Eliminar_Dato = new javax.swing.JLabel();
        jRadioButton_Campos_Eliminar_Char = new javax.swing.JRadioButton();
        jRadioButton_Campos_Eliminar_No = new javax.swing.JRadioButton();
        jLabel_Campos_Eliminar_Nombre = new javax.swing.JLabel();
        jTextField_Campos_Eliminar_Nombre = new javax.swing.JTextField();
        jRadioButton_Campos_Eliminar_Bool = new javax.swing.JRadioButton();
        jComboBox_Eliminar = new javax.swing.JComboBox<>();
        jRadioButton_Campos_Eliminar_String = new javax.swing.JRadioButton();
        jTextField_Campos_Eliminar_Longitud = new javax.swing.JTextField();
        buttonGroup_EliminarTipo = new javax.swing.ButtonGroup();
        buttonGroup_EliminarLlave = new javax.swing.ButtonGroup();
        jDialog_Registros_Introducir = new javax.swing.JDialog();
        jPanel_Registros_panel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_Registro_introducir = new javax.swing.JTable();
        jButton_IntroducirRegistros_crear = new javax.swing.JButton();
        jButton_Registros_Regresar = new javax.swing.JButton();
        jLabel_Registros_OpcionesRegistros1 = new javax.swing.JLabel();
        jDialog_Registros_listar = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_Registros_listar = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jDialog_Registros_buscar = new javax.swing.JDialog();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable_Registros_buscar = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jDialog_Registros_cruzar = new javax.swing.JDialog();
        jPanel_Registros_Cruzar = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jList_Registros_Cruzar_Campos2 = new javax.swing.JList<>();
        jScrollPane7 = new javax.swing.JScrollPane();
        jList_Registros_Cruzar_Campos1 = new javax.swing.JList<>();
        jButton_Registros_Cruzar_Cruzar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel_Registros_Cruzar_Archivo1 = new javax.swing.JLabel();
        jLabel_Registros_OpcionesRegistros4 = new javax.swing.JLabel();
        jLabel_Registros_Cruzar_Archivo2 = new javax.swing.JLabel();
        jComboBox_Registros_cruzar1 = new javax.swing.JComboBox<>();
        jComboBox_Registros_cruzar2 = new javax.swing.JComboBox<>();
        jLabel_Registros_Cruzar_Archivo4 = new javax.swing.JLabel();
        jLabel_Registros_Cruzar_Archivo5 = new javax.swing.JLabel();
        jLabel_Registros_Cruzar_Archivo6 = new javax.swing.JLabel();
        jLabel_Registros_OpcionesRegistros5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTabbedPane_Menu = new javax.swing.JTabbedPane();
        jPanel_Archivo = new javax.swing.JPanel();
        jPanel_Archivo_crear = new javax.swing.JPanel();
        jTextField_Archivo_Crear = new javax.swing.JTextField();
        jButton_Archivo_crear = new javax.swing.JButton();
        jButton_Archivo_crear1 = new javax.swing.JButton();
        jButton_Archivo_Nuevo = new javax.swing.JButton();
        jButton_Archivo_Abrir = new javax.swing.JButton();
        jButton_Archivo_Salvar = new javax.swing.JButton();
        jButton_Archivo_Cerrar = new javax.swing.JButton();
        jButton_Archivo_Nuevo1 = new javax.swing.JButton();
        jLabel_Archivo_currentFile = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel_Campos = new javax.swing.JPanel();
        jLabel_Campos_OpcionesCampo = new javax.swing.JLabel();
        jButton_Campos_Crear = new javax.swing.JButton();
        jButton_Campos_Listar = new javax.swing.JButton();
        jButton_Campos_Modificar = new javax.swing.JButton();
        jButton_Campos_Eliminar = new javax.swing.JButton();
        jPanel_Registros = new javax.swing.JPanel();
        jButton_Registros_introducir = new javax.swing.JButton();
        jButton_Registros_Modificar = new javax.swing.JButton();
        jButton_Registros_Buscar = new javax.swing.JButton();
        jButton_Registros_Prueba = new javax.swing.JButton();
        jLabel_Registros_OpcionesRegistros = new javax.swing.JLabel();
        jButton_Registros_Listar = new javax.swing.JButton();
        jButton_Registros_Cruzar = new javax.swing.JButton();
        jButton_Registros_borrar = new javax.swing.JButton();
        jPanel_indices = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jButton_Indicie_Crear = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList_Indices_CrearIndices = new javax.swing.JList<>();
        jLabel_indices_crearIndices = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jList_Indices_ReIndexar = new javax.swing.JList<>();
        jButton_Indices_ReIndexar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jPanel_Estandarizacion = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton_estandar_Exportar_XML = new javax.swing.JButton();
        jButton_estandar_Exportar_Excel = new javax.swing.JButton();

        jDialog_Campos_Crear.setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 478));

        jLabel_Campos_Longitud.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel_Campos_Longitud.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Campos_Longitud.setText("Longitud del atributo");

        jTextField_Campos_Nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_Campos_NombreActionPerformed(evt);
            }
        });

        jLabel_Campos_Dato.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel_Campos_Dato.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Campos_Dato.setText("Dato del atributo");

        jSpinner_Campos_Longitud.setModel(new javax.swing.SpinnerNumberModel(1, 1, 50, 1));

        jLabel_Campos_Key.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel_Campos_Key.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Campos_Key.setText("Es llave");

        jRadioButton_Campos_Bool.setBackground(new java.awt.Color(204, 255, 204));
        jRadioButton_Campos_Bool.setFont(new java.awt.Font("DialogInput", 1, 11)); // NOI18N
        jRadioButton_Campos_Bool.setForeground(new java.awt.Color(0, 0, 0));
        jRadioButton_Campos_Bool.setText("Bool");
        jRadioButton_Campos_Bool.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton_Campos_BoolMouseClicked(evt);
            }
        });

        jRadioButton_Campos_Int.setBackground(new java.awt.Color(204, 255, 204));
        jRadioButton_Campos_Int.setFont(new java.awt.Font("DialogInput", 1, 11)); // NOI18N
        jRadioButton_Campos_Int.setForeground(new java.awt.Color(0, 0, 0));
        jRadioButton_Campos_Int.setText("Int");
        jRadioButton_Campos_Int.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton_Campos_IntMouseClicked(evt);
            }
        });
        jRadioButton_Campos_Int.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_Campos_IntActionPerformed(evt);
            }
        });

        jRadioButton_Campos_Si.setBackground(new java.awt.Color(204, 255, 204));
        jRadioButton_Campos_Si.setFont(new java.awt.Font("DialogInput", 1, 10)); // NOI18N
        jRadioButton_Campos_Si.setForeground(new java.awt.Color(0, 0, 0));
        jRadioButton_Campos_Si.setText("Si");
        jRadioButton_Campos_Si.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton_Campos_SiMouseClicked(evt);
            }
        });

        jRadioButton_Campos_Float.setBackground(new java.awt.Color(204, 255, 204));
        jRadioButton_Campos_Float.setFont(new java.awt.Font("DialogInput", 1, 11)); // NOI18N
        jRadioButton_Campos_Float.setForeground(new java.awt.Color(0, 0, 0));
        jRadioButton_Campos_Float.setText("Float");
        jRadioButton_Campos_Float.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton_Campos_FloatMouseClicked(evt);
            }
        });
        jRadioButton_Campos_Float.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_Campos_FloatActionPerformed(evt);
            }
        });

        jRadioButton_Campos_No.setBackground(new java.awt.Color(204, 255, 204));
        jRadioButton_Campos_No.setFont(new java.awt.Font("DialogInput", 1, 10)); // NOI18N
        jRadioButton_Campos_No.setForeground(new java.awt.Color(0, 0, 0));
        jRadioButton_Campos_No.setText("No");
        jRadioButton_Campos_No.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_Campos_NoActionPerformed(evt);
            }
        });

        jRadioButton_Campos_String.setBackground(new java.awt.Color(204, 255, 204));
        jRadioButton_Campos_String.setFont(new java.awt.Font("DialogInput", 1, 11)); // NOI18N
        jRadioButton_Campos_String.setForeground(new java.awt.Color(0, 0, 0));
        jRadioButton_Campos_String.setText("String");
        jRadioButton_Campos_String.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButton_Campos_StringItemStateChanged(evt);
            }
        });
        jRadioButton_Campos_String.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButton_Campos_StringStateChanged(evt);
            }
        });
        jRadioButton_Campos_String.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton_Campos_StringMouseClicked(evt);
            }
        });
        jRadioButton_Campos_String.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_Campos_StringActionPerformed(evt);
            }
        });

        jLabel_Campos_CrearCampo.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel_Campos_CrearCampo.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Campos_CrearCampo.setText("Crear Campo:");

        jRadioButton_Campos_Char.setBackground(new java.awt.Color(204, 255, 204));
        jRadioButton_Campos_Char.setFont(new java.awt.Font("DialogInput", 1, 11)); // NOI18N
        jRadioButton_Campos_Char.setForeground(new java.awt.Color(0, 0, 0));
        jRadioButton_Campos_Char.setText("Char");
        jRadioButton_Campos_Char.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton_Campos_CharMouseClicked(evt);
            }
        });
        jRadioButton_Campos_Char.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_Campos_CharActionPerformed(evt);
            }
        });

        jLabel_Campos_Nombre.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel_Campos_Nombre.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Campos_Nombre.setText("Nombre Campo:");

        jButton_Campos_Regresar.setFont(new java.awt.Font("DialogInput", 3, 11)); // NOI18N
        jButton_Campos_Regresar.setText("Regresar");
        jButton_Campos_Regresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Campos_RegresarMouseClicked(evt);
            }
        });

        jButton_Campos_CrearCampo.setFont(new java.awt.Font("DialogInput", 3, 11)); // NOI18N
        jButton_Campos_CrearCampo.setText("Crear");
        jButton_Campos_CrearCampo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Campos_CrearCampoMouseClicked(evt);
            }
        });
        jButton_Campos_CrearCampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Campos_CrearCampoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(195, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel_Campos_Nombre)
                        .addGap(59, 59, 59)
                        .addComponent(jTextField_Campos_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(136, 136, 136))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel_Campos_Longitud)
                            .addComponent(jRadioButton_Campos_No, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(305, 305, 305))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jRadioButton_Campos_String)
                        .addGap(48, 48, 48)
                        .addComponent(jRadioButton_Campos_Char)
                        .addGap(167, 167, 167))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(286, 286, 286)
                        .addComponent(jSpinner_Campos_Longitud, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(324, 324, 324)
                        .addComponent(jLabel_Campos_Key))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jButton_Campos_Regresar, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(jRadioButton_Campos_Bool)
                        .addGap(48, 48, 48)
                        .addComponent(jRadioButton_Campos_Int)
                        .addGap(54, 54, 54)
                        .addComponent(jRadioButton_Campos_Float))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(269, 269, 269)
                        .addComponent(jRadioButton_Campos_Si, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(288, 288, 288)
                        .addComponent(jLabel_Campos_CrearCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(292, 292, 292)
                        .addComponent(jLabel_Campos_Dato)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(609, Short.MAX_VALUE)
                    .addComponent(jButton_Campos_CrearCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(22, 22, 22)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel_Campos_CrearCampo)
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_Campos_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_Campos_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel_Campos_Dato, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton_Campos_String)
                    .addComponent(jRadioButton_Campos_Char)
                    .addComponent(jRadioButton_Campos_Float)
                    .addComponent(jRadioButton_Campos_Int)
                    .addComponent(jRadioButton_Campos_Bool))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel_Campos_Longitud, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSpinner_Campos_Longitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel_Campos_Key, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton_Campos_Si)
                    .addComponent(jRadioButton_Campos_No))
                .addGap(31, 31, 31)
                .addComponent(jButton_Campos_Regresar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(415, Short.MAX_VALUE)
                    .addComponent(jButton_Campos_CrearCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(21, 21, 21)))
        );

        jSpinner_Campos_Longitud.setEnabled(false);

        javax.swing.GroupLayout jDialog_Campos_CrearLayout = new javax.swing.GroupLayout(jDialog_Campos_Crear.getContentPane());
        jDialog_Campos_Crear.getContentPane().setLayout(jDialog_Campos_CrearLayout);
        jDialog_Campos_CrearLayout.setHorizontalGroup(
            jDialog_Campos_CrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog_Campos_CrearLayout.setVerticalGroup(
            jDialog_Campos_CrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(102, 255, 102));
        jPanel2.setPreferredSize(new java.awt.Dimension(800, 478));

        jLabel_Campos_CrearCampo1.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel_Campos_CrearCampo1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Campos_CrearCampo1.setText("Listar Campos");

        jTable_Campos_Listar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable_Campos_Listar);

        jButton_Campos_Listar_Regresar.setFont(new java.awt.Font("DialogInput", 3, 11)); // NOI18N
        jButton_Campos_Listar_Regresar.setText("Regresar");
        jButton_Campos_Listar_Regresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Campos_Listar_RegresarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(284, 284, 284)
                        .addComponent(jLabel_Campos_CrearCampo1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton_Campos_Listar_Regresar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(116, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel_Campos_CrearCampo1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton_Campos_Listar_Regresar)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialog_Campos_ListarLayout = new javax.swing.GroupLayout(jDialog_Campos_Listar.getContentPane());
        jDialog_Campos_Listar.getContentPane().setLayout(jDialog_Campos_ListarLayout);
        jDialog_Campos_ListarLayout.setHorizontalGroup(
            jDialog_Campos_ListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_Campos_ListarLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jDialog_Campos_ListarLayout.setVerticalGroup(
            jDialog_Campos_ListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_Campos_ListarLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 102, 102));
        jPanel3.setPreferredSize(new java.awt.Dimension(800, 478));

        jLabel_Campos_ModificarCampo.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel_Campos_ModificarCampo.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Campos_ModificarCampo.setText("Modificar Campos");

        jButton_Campos_Modificat_Confirmar.setFont(new java.awt.Font("DialogInput", 3, 11)); // NOI18N
        jButton_Campos_Modificat_Confirmar.setText("Confirmar");
        jButton_Campos_Modificat_Confirmar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Campos_Modificat_ConfirmarMouseClicked(evt);
            }
        });

        jButton_Campos_Modificar_Regresar.setFont(new java.awt.Font("DialogInput", 3, 11)); // NOI18N
        jButton_Campos_Modificar_Regresar.setText("Regresar");
        jButton_Campos_Modificar_Regresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Campos_Modificar_RegresarMouseClicked(evt);
            }
        });

        jRadioButton_Campos_Modificar_Char.setBackground(new java.awt.Color(255, 102, 102));
        jRadioButton_Campos_Modificar_Char.setFont(new java.awt.Font("DialogInput", 1, 11)); // NOI18N
        jRadioButton_Campos_Modificar_Char.setForeground(new java.awt.Color(0, 0, 0));
        jRadioButton_Campos_Modificar_Char.setText("Char");
        jRadioButton_Campos_Modificar_Char.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_Campos_Modificar_CharActionPerformed(evt);
            }
        });

        jLabel_Campos_Modificar_Nombre.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel_Campos_Modificar_Nombre.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Campos_Modificar_Nombre.setText("Nombre Campo:");

        jRadioButton_Campos_Modificar_Bool.setBackground(new java.awt.Color(255, 102, 102));
        jRadioButton_Campos_Modificar_Bool.setFont(new java.awt.Font("DialogInput", 1, 11)); // NOI18N
        jRadioButton_Campos_Modificar_Bool.setForeground(new java.awt.Color(0, 0, 0));
        jRadioButton_Campos_Modificar_Bool.setText("Bool");

        jRadioButton_Campos_Modificar_Si.setBackground(new java.awt.Color(255, 102, 102));
        jRadioButton_Campos_Modificar_Si.setFont(new java.awt.Font("DialogInput", 1, 10)); // NOI18N
        jRadioButton_Campos_Modificar_Si.setForeground(new java.awt.Color(0, 0, 0));
        jRadioButton_Campos_Modificar_Si.setText("Si");

        jLabel_Campos_Modificar_Dato.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel_Campos_Modificar_Dato.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Campos_Modificar_Dato.setText("Dato del atributo");

        jLabel_Campos_Modificar_Longitud.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel_Campos_Modificar_Longitud.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Campos_Modificar_Longitud.setText("Longitud del atributo");

        jSpinner_Campos_Modificar_Longitud.setModel(new javax.swing.SpinnerNumberModel(1, 1, 50, 1));

        jRadioButton_Campos_Modificar_Int.setBackground(new java.awt.Color(255, 102, 102));
        jRadioButton_Campos_Modificar_Int.setFont(new java.awt.Font("DialogInput", 1, 11)); // NOI18N
        jRadioButton_Campos_Modificar_Int.setForeground(new java.awt.Color(0, 0, 0));
        jRadioButton_Campos_Modificar_Int.setText("Int");
        jRadioButton_Campos_Modificar_Int.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_Campos_Modificar_IntActionPerformed(evt);
            }
        });

        jRadioButton_Campos_Modificar_Float.setBackground(new java.awt.Color(255, 102, 102));
        jRadioButton_Campos_Modificar_Float.setFont(new java.awt.Font("DialogInput", 1, 11)); // NOI18N
        jRadioButton_Campos_Modificar_Float.setForeground(new java.awt.Color(0, 0, 0));
        jRadioButton_Campos_Modificar_Float.setText("Float");
        jRadioButton_Campos_Modificar_Float.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_Campos_Modificar_FloatActionPerformed(evt);
            }
        });

        jLabel_Campos_Modificar_Key.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel_Campos_Modificar_Key.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Campos_Modificar_Key.setText("Es llave");

        jRadioButton_Campos_Modificar_String.setBackground(new java.awt.Color(255, 102, 102));
        jRadioButton_Campos_Modificar_String.setFont(new java.awt.Font("DialogInput", 1, 11)); // NOI18N
        jRadioButton_Campos_Modificar_String.setForeground(new java.awt.Color(0, 0, 0));
        jRadioButton_Campos_Modificar_String.setText("String");
        jRadioButton_Campos_Modificar_String.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_Campos_Modificar_StringActionPerformed(evt);
            }
        });

        jRadioButton_Campos_Modificar_No.setBackground(new java.awt.Color(255, 102, 102));
        jRadioButton_Campos_Modificar_No.setFont(new java.awt.Font("DialogInput", 1, 10)); // NOI18N
        jRadioButton_Campos_Modificar_No.setForeground(new java.awt.Color(0, 0, 0));
        jRadioButton_Campos_Modificar_No.setText("No");
        jRadioButton_Campos_Modificar_No.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_Campos_Modificar_NoActionPerformed(evt);
            }
        });

        jTextField_Campos_Modificar_Nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_Campos_Modificar_NombreActionPerformed(evt);
            }
        });

        jComboBox_Modificar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox_Modificar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_ModificarItemStateChanged(evt);
            }
        });
        jComboBox_Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_ModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel_Campos_ModificarCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(292, 292, 292))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(290, 290, 290)
                .addComponent(jLabel_Campos_Modificar_Dato)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jRadioButton_Campos_Modificar_Char)
                            .addGap(18, 18, 18)
                            .addComponent(jRadioButton_Campos_Modificar_Bool)
                            .addGap(29, 29, 29)
                            .addComponent(jRadioButton_Campos_Modificar_Int)
                            .addGap(36, 36, 36)
                            .addComponent(jRadioButton_Campos_Modificar_Float)
                            .addGap(34, 34, 34)
                            .addComponent(jRadioButton_Campos_Modificar_String))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(97, 97, 97)
                                .addComponent(jLabel_Campos_Modificar_Nombre)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_Campos_Modificar_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(286, 286, 286)
                                .addComponent(jRadioButton_Campos_Modificar_No)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(jLabel_Campos_Modificar_Key))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(94, 94, 94)
                                        .addComponent(jRadioButton_Campos_Modificar_Si))))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(262, 262, 262)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel_Campos_Modificar_Longitud, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSpinner_Campos_Modificar_Longitud))))
                .addGap(215, 253, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jButton_Campos_Modificar_Regresar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_Campos_Modificat_Confirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_Modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_Campos_ModificarCampo)
                .addGap(16, 16, 16)
                .addComponent(jComboBox_Modificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_Campos_Modificar_Nombre)
                    .addComponent(jTextField_Campos_Modificar_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel_Campos_Modificar_Dato)
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton_Campos_Modificar_Char)
                    .addComponent(jRadioButton_Campos_Modificar_Bool)
                    .addComponent(jRadioButton_Campos_Modificar_Float)
                    .addComponent(jRadioButton_Campos_Modificar_String)
                    .addComponent(jRadioButton_Campos_Modificar_Int))
                .addGap(30, 30, 30)
                .addComponent(jLabel_Campos_Modificar_Longitud)
                .addGap(18, 18, 18)
                .addComponent(jSpinner_Campos_Modificar_Longitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel_Campos_Modificar_Key)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(jRadioButton_Campos_Modificar_No)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton_Campos_Modificar_Regresar)
                            .addComponent(jButton_Campos_Modificat_Confirmar))
                        .addGap(73, 73, 73))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jRadioButton_Campos_Modificar_Si)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout jDialog_Campos_ModificarLayout = new javax.swing.GroupLayout(jDialog_Campos_Modificar.getContentPane());
        jDialog_Campos_Modificar.getContentPane().setLayout(jDialog_Campos_ModificarLayout);
        jDialog_Campos_ModificarLayout.setHorizontalGroup(
            jDialog_Campos_ModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_Campos_ModificarLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jDialog_Campos_ModificarLayout.setVerticalGroup(
            jDialog_Campos_ModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_Campos_ModificarLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(102, 255, 255));
        jPanel4.setPreferredSize(new java.awt.Dimension(800, 478));

        jButton_Campos_Eliminar_Regresar.setFont(new java.awt.Font("DialogInput", 3, 11)); // NOI18N
        jButton_Campos_Eliminar_Regresar.setText("Regresar");
        jButton_Campos_Eliminar_Regresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Campos_Eliminar_RegresarMouseClicked(evt);
            }
        });

        jLabel_Campos_Eliminar_Key.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel_Campos_Eliminar_Key.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Campos_Eliminar_Key.setText("Es llave");

        jButton_Campos_Eliminar_Confirmar.setFont(new java.awt.Font("DialogInput", 3, 11)); // NOI18N
        jButton_Campos_Eliminar_Confirmar.setText("Confirmar");
        jButton_Campos_Eliminar_Confirmar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Campos_Eliminar_ConfirmarMouseClicked(evt);
            }
        });

        jRadioButton_Campos_Eliminar_Si.setBackground(new java.awt.Color(102, 255, 255));
        jRadioButton_Campos_Eliminar_Si.setFont(new java.awt.Font("DialogInput", 1, 10)); // NOI18N
        jRadioButton_Campos_Eliminar_Si.setForeground(new java.awt.Color(0, 0, 0));
        jRadioButton_Campos_Eliminar_Si.setText("Si");

        jRadioButton_Campos_Eliminar_Float.setBackground(new java.awt.Color(102, 255, 255));
        jRadioButton_Campos_Eliminar_Float.setFont(new java.awt.Font("DialogInput", 1, 11)); // NOI18N
        jRadioButton_Campos_Eliminar_Float.setForeground(new java.awt.Color(0, 0, 0));
        jRadioButton_Campos_Eliminar_Float.setText("Float");
        jRadioButton_Campos_Eliminar_Float.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_Campos_Eliminar_FloatActionPerformed(evt);
            }
        });

        jLabel_Campos_Eliminar_Campo.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel_Campos_Eliminar_Campo.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Campos_Eliminar_Campo.setText("Eliminar Campos");

        jLabel_Campos_Eliminar_Longitud.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel_Campos_Eliminar_Longitud.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Campos_Eliminar_Longitud.setText("Longitud del atributo");

        jRadioButton_Campos_Eliminar_Int.setBackground(new java.awt.Color(102, 255, 255));
        jRadioButton_Campos_Eliminar_Int.setFont(new java.awt.Font("DialogInput", 1, 11)); // NOI18N
        jRadioButton_Campos_Eliminar_Int.setForeground(new java.awt.Color(0, 0, 0));
        jRadioButton_Campos_Eliminar_Int.setText("Int");
        jRadioButton_Campos_Eliminar_Int.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_Campos_Eliminar_IntActionPerformed(evt);
            }
        });

        jLabel_Campos_Eliminar_Dato.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel_Campos_Eliminar_Dato.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Campos_Eliminar_Dato.setText("Dato del atributo");

        jRadioButton_Campos_Eliminar_Char.setBackground(new java.awt.Color(102, 255, 255));
        jRadioButton_Campos_Eliminar_Char.setFont(new java.awt.Font("DialogInput", 1, 11)); // NOI18N
        jRadioButton_Campos_Eliminar_Char.setForeground(new java.awt.Color(0, 0, 0));
        jRadioButton_Campos_Eliminar_Char.setText("Char");
        jRadioButton_Campos_Eliminar_Char.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_Campos_Eliminar_CharActionPerformed(evt);
            }
        });

        jRadioButton_Campos_Eliminar_No.setBackground(new java.awt.Color(102, 255, 255));
        jRadioButton_Campos_Eliminar_No.setFont(new java.awt.Font("DialogInput", 1, 10)); // NOI18N
        jRadioButton_Campos_Eliminar_No.setForeground(new java.awt.Color(0, 0, 0));
        jRadioButton_Campos_Eliminar_No.setText("No");
        jRadioButton_Campos_Eliminar_No.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_Campos_Eliminar_NoActionPerformed(evt);
            }
        });

        jLabel_Campos_Eliminar_Nombre.setBackground(new java.awt.Color(102, 255, 255));
        jLabel_Campos_Eliminar_Nombre.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel_Campos_Eliminar_Nombre.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Campos_Eliminar_Nombre.setText("Nombre Campo:");

        jTextField_Campos_Eliminar_Nombre.setEditable(false);
        jTextField_Campos_Eliminar_Nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_Campos_Eliminar_NombreActionPerformed(evt);
            }
        });

        jRadioButton_Campos_Eliminar_Bool.setBackground(new java.awt.Color(102, 255, 255));
        jRadioButton_Campos_Eliminar_Bool.setFont(new java.awt.Font("DialogInput", 1, 11)); // NOI18N
        jRadioButton_Campos_Eliminar_Bool.setForeground(new java.awt.Color(0, 0, 0));
        jRadioButton_Campos_Eliminar_Bool.setText("Bool");

        jComboBox_Eliminar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox_Eliminar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_EliminarItemStateChanged(evt);
            }
        });
        jComboBox_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_EliminarActionPerformed(evt);
            }
        });

        jRadioButton_Campos_Eliminar_String.setBackground(new java.awt.Color(102, 255, 255));
        jRadioButton_Campos_Eliminar_String.setFont(new java.awt.Font("DialogInput", 1, 11)); // NOI18N
        jRadioButton_Campos_Eliminar_String.setForeground(new java.awt.Color(0, 0, 0));
        jRadioButton_Campos_Eliminar_String.setText("String");
        jRadioButton_Campos_Eliminar_String.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_Campos_Eliminar_StringActionPerformed(evt);
            }
        });

        jTextField_Campos_Eliminar_Longitud.setEditable(false);
        jTextField_Campos_Eliminar_Longitud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_Campos_Eliminar_LongitudActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jButton_Campos_Eliminar_Regresar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_Campos_Eliminar_Confirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(162, 162, 162)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_Campos_Eliminar_Nombre)
                    .addComponent(jRadioButton_Campos_Eliminar_String))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_Campos_Eliminar_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel_Campos_Eliminar_Campo, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(172, 172, 172)
                                .addComponent(jComboBox_Eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel_Campos_Eliminar_Dato))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jRadioButton_Campos_Eliminar_Float)
                        .addGap(26, 26, 26)
                        .addComponent(jRadioButton_Campos_Eliminar_Char)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton_Campos_Eliminar_Bool)
                        .addGap(27, 27, 27)
                        .addComponent(jRadioButton_Campos_Eliminar_Int)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(295, 295, 295)
                .addComponent(jLabel_Campos_Eliminar_Longitud, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(271, 271, 271))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel_Campos_Eliminar_Key)
                        .addGap(386, 386, 386))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jRadioButton_Campos_Eliminar_Si)
                        .addGap(72, 72, 72)
                        .addComponent(jRadioButton_Campos_Eliminar_No)
                        .addGap(360, 360, 360))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jTextField_Campos_Eliminar_Longitud, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(230, 230, 230))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_Campos_Eliminar_Campo)
                    .addComponent(jComboBox_Eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel_Campos_Eliminar_Nombre)
                            .addComponent(jTextField_Campos_Eliminar_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addComponent(jLabel_Campos_Eliminar_Dato)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButton_Campos_Eliminar_Char)
                            .addComponent(jRadioButton_Campos_Eliminar_String)
                            .addComponent(jRadioButton_Campos_Eliminar_Float)
                            .addComponent(jRadioButton_Campos_Eliminar_Bool)
                            .addComponent(jRadioButton_Campos_Eliminar_Int))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_Campos_Eliminar_Longitud)))
                .addGap(18, 18, 18)
                .addComponent(jTextField_Campos_Eliminar_Longitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_Campos_Eliminar_Key)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton_Campos_Eliminar_No)
                    .addComponent(jRadioButton_Campos_Eliminar_Si))
                .addGap(15, 15, 15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Campos_Eliminar_Regresar)
                    .addComponent(jButton_Campos_Eliminar_Confirmar))
                .addGap(67, 67, 67))
        );

        javax.swing.GroupLayout jDialog_Campos_EliminarLayout = new javax.swing.GroupLayout(jDialog_Campos_Eliminar.getContentPane());
        jDialog_Campos_Eliminar.getContentPane().setLayout(jDialog_Campos_EliminarLayout);
        jDialog_Campos_EliminarLayout.setHorizontalGroup(
            jDialog_Campos_EliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_Campos_EliminarLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jDialog_Campos_EliminarLayout.setVerticalGroup(
            jDialog_Campos_EliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_Campos_EliminarLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel_Registros_panel.setBackground(new java.awt.Color(153, 255, 153));

        jTable_Registro_introducir.setModel(new DefaultTableModel());
        jTable_Registro_introducir.setToolTipText("");
        jTable_Registro_introducir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable_Registro_introducirKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_Registro_introducir);

        jButton_IntroducirRegistros_crear.setText("Crear");
        jButton_IntroducirRegistros_crear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_IntroducirRegistros_crearMouseClicked(evt);
            }
        });

        jButton_Registros_Regresar.setText("Regresar");
        jButton_Registros_Regresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Registros_RegresarMouseClicked(evt);
            }
        });

        jLabel_Registros_OpcionesRegistros1.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel_Registros_OpcionesRegistros1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Registros_OpcionesRegistros1.setText("Introducir Registro");

        javax.swing.GroupLayout jPanel_Registros_panelLayout = new javax.swing.GroupLayout(jPanel_Registros_panel);
        jPanel_Registros_panel.setLayout(jPanel_Registros_panelLayout);
        jPanel_Registros_panelLayout.setHorizontalGroup(
            jPanel_Registros_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_Registros_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_Registros_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel_Registros_panelLayout.createSequentialGroup()
                        .addComponent(jButton_Registros_Regresar, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_IntroducirRegistros_crear, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_Registros_panelLayout.createSequentialGroup()
                .addContainerGap(295, Short.MAX_VALUE)
                .addComponent(jLabel_Registros_OpcionesRegistros1)
                .addGap(294, 294, 294))
        );
        jPanel_Registros_panelLayout.setVerticalGroup(
            jPanel_Registros_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_Registros_panelLayout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(jLabel_Registros_OpcionesRegistros1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel_Registros_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_IntroducirRegistros_crear)
                    .addComponent(jButton_Registros_Regresar))
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout jDialog_Registros_IntroducirLayout = new javax.swing.GroupLayout(jDialog_Registros_Introducir.getContentPane());
        jDialog_Registros_Introducir.getContentPane().setLayout(jDialog_Registros_IntroducirLayout);
        jDialog_Registros_IntroducirLayout.setHorizontalGroup(
            jDialog_Registros_IntroducirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_Registros_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog_Registros_IntroducirLayout.setVerticalGroup(
            jDialog_Registros_IntroducirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_Registros_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(0, 153, 102));

        jTable_Registros_listar.setModel(new DefaultTableModel());
        jTable_Registros_listar.setEnabled(false);
        jScrollPane3.setViewportView(jTable_Registros_listar);

        jButton1.setText("Cerrar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jDialog_Registros_listarLayout = new javax.swing.GroupLayout(jDialog_Registros_listar.getContentPane());
        jDialog_Registros_listar.getContentPane().setLayout(jDialog_Registros_listarLayout);
        jDialog_Registros_listarLayout.setHorizontalGroup(
            jDialog_Registros_listarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog_Registros_listarLayout.setVerticalGroup(
            jDialog_Registros_listarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTable_Registros_buscar.setModel(new DefaultTableModel());
        jScrollPane4.setViewportView(jTable_Registros_buscar);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel2.setText("Buscar Registros ");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/lupa2-removebg-preview.png"))); // NOI18N

        javax.swing.GroupLayout jDialog_Registros_buscarLayout = new javax.swing.GroupLayout(jDialog_Registros_buscar.getContentPane());
        jDialog_Registros_buscar.getContentPane().setLayout(jDialog_Registros_buscarLayout);
        jDialog_Registros_buscarLayout.setHorizontalGroup(
            jDialog_Registros_buscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_Registros_buscarLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jDialog_Registros_buscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(jDialog_Registros_buscarLayout.createSequentialGroup()
                        .addGap(0, 134, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(84, 84, 84)
                        .addComponent(jLabel4)))
                .addGap(41, 41, 41))
        );
        jDialog_Registros_buscarLayout.setVerticalGroup(
            jDialog_Registros_buscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_Registros_buscarLayout.createSequentialGroup()
                .addGroup(jDialog_Registros_buscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog_Registros_buscarLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel4))
                    .addGroup(jDialog_Registros_buscarLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel2)))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPanel_Registros_Cruzar.setBackground(new java.awt.Color(153, 255, 153));
        jPanel_Registros_Cruzar.setPreferredSize(new java.awt.Dimension(636, 505));

        jList_Registros_Cruzar_Campos2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane6.setViewportView(jList_Registros_Cruzar_Campos2);

        jList_Registros_Cruzar_Campos1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane7.setViewportView(jList_Registros_Cruzar_Campos1);

        jButton_Registros_Cruzar_Cruzar.setText("Cruzar Archivos");
        jButton_Registros_Cruzar_Cruzar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Registros_Cruzar_CruzarMouseClicked(evt);
            }
        });

        jButton3.setText("Regresar");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jLabel_Registros_Cruzar_Archivo1.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel_Registros_Cruzar_Archivo1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Registros_Cruzar_Archivo1.setText(" ");

        jLabel_Registros_OpcionesRegistros4.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        jLabel_Registros_OpcionesRegistros4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Registros_OpcionesRegistros4.setText("Eliga campos para mostrar en el cruze:");

        jLabel_Registros_Cruzar_Archivo2.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel_Registros_Cruzar_Archivo2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Registros_Cruzar_Archivo2.setText(" ");

        jComboBox_Registros_cruzar1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBox_Registros_cruzar2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel_Registros_Cruzar_Archivo4.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        jLabel_Registros_Cruzar_Archivo4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Registros_Cruzar_Archivo4.setText("Relacionar por:");

        jLabel_Registros_Cruzar_Archivo5.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        jLabel_Registros_Cruzar_Archivo5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Registros_Cruzar_Archivo5.setText("Campos Archivo 2:");

        jLabel_Registros_Cruzar_Archivo6.setFont(new java.awt.Font("DialogInput", 1, 12)); // NOI18N
        jLabel_Registros_Cruzar_Archivo6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Registros_Cruzar_Archivo6.setText("Campos archivo 1:");

        jLabel_Registros_OpcionesRegistros5.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel_Registros_OpcionesRegistros5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Registros_OpcionesRegistros5.setText("Cruzar Campos");
        jLabel_Registros_OpcionesRegistros5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel_Registros_CruzarLayout = new javax.swing.GroupLayout(jPanel_Registros_Cruzar);
        jPanel_Registros_Cruzar.setLayout(jPanel_Registros_CruzarLayout);
        jPanel_Registros_CruzarLayout.setHorizontalGroup(
            jPanel_Registros_CruzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_Registros_CruzarLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel_Registros_CruzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_Registros_OpcionesRegistros4)
                    .addGroup(jPanel_Registros_CruzarLayout.createSequentialGroup()
                        .addGroup(jPanel_Registros_CruzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                            .addComponent(jLabel_Registros_Cruzar_Archivo1, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE))
                        .addGap(71, 71, 71)
                        .addGroup(jPanel_Registros_CruzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel_Registros_CruzarLayout.createSequentialGroup()
                                .addGroup(jPanel_Registros_CruzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel_Registros_Cruzar_Archivo2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(36, 36, 36)
                                .addGroup(jPanel_Registros_CruzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox_Registros_cruzar1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox_Registros_cruzar2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel_Registros_Cruzar_Archivo4, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel_Registros_Cruzar_Archivo6)
                                    .addComponent(jLabel_Registros_Cruzar_Archivo5)))
                            .addGroup(jPanel_Registros_CruzarLayout.createSequentialGroup()
                                .addComponent(jButton_Registros_Cruzar_Cruzar, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)))))
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_Registros_CruzarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel_Registros_OpcionesRegistros5)
                .addGap(242, 242, 242))
        );
        jPanel_Registros_CruzarLayout.setVerticalGroup(
            jPanel_Registros_CruzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_Registros_CruzarLayout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jLabel_Registros_OpcionesRegistros5)
                .addGap(18, 18, 18)
                .addComponent(jLabel_Registros_OpcionesRegistros4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_Registros_CruzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_Registros_Cruzar_Archivo1)
                    .addComponent(jLabel_Registros_Cruzar_Archivo2)
                    .addComponent(jLabel_Registros_Cruzar_Archivo4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_Registros_CruzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel_Registros_CruzarLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel_Registros_Cruzar_Archivo6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox_Registros_cruzar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_Registros_Cruzar_Archivo5)
                        .addGap(8, 8, 8)
                        .addComponent(jComboBox_Registros_cruzar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50)
                .addGroup(jPanel_Registros_CruzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Registros_Cruzar_Cruzar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout jDialog_Registros_cruzarLayout = new javax.swing.GroupLayout(jDialog_Registros_cruzar.getContentPane());
        jDialog_Registros_cruzar.getContentPane().setLayout(jDialog_Registros_cruzarLayout);
        jDialog_Registros_cruzarLayout.setHorizontalGroup(
            jDialog_Registros_cruzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_Registros_Cruzar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog_Registros_cruzarLayout.setVerticalGroup(
            jDialog_Registros_cruzarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_Registros_Cruzar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Exportar Excel");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane_Menu.setBackground(new java.awt.Color(153, 153, 153));
        jTabbedPane_Menu.setForeground(new java.awt.Color(0, 0, 0));
        jTabbedPane_Menu.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane_MenuStateChanged(evt);
            }
        });
        jTabbedPane_Menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane_MenuMouseClicked(evt);
            }
        });

        jPanel_Archivo.setBackground(new java.awt.Color(204, 255, 204));
        jPanel_Archivo.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jPanel_Archivo_crear.setBackground(new java.awt.Color(0, 153, 51));
        jPanel_Archivo_crear.setForeground(new java.awt.Color(0, 51, 0));

        jTextField_Archivo_Crear.setText("Ingrese el nombre del archivo...");
        jTextField_Archivo_Crear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField_Archivo_CrearMouseClicked(evt);
            }
        });
        jTextField_Archivo_Crear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_Archivo_CrearActionPerformed(evt);
            }
        });

        jButton_Archivo_crear.setText("Crear");
        jButton_Archivo_crear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Archivo_crearMouseClicked(evt);
            }
        });

        jButton_Archivo_crear1.setText("Cancelar");
        jButton_Archivo_crear1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Archivo_crear1MouseClicked(evt);
            }
        });
        jButton_Archivo_crear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Archivo_crear1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_Archivo_crearLayout = new javax.swing.GroupLayout(jPanel_Archivo_crear);
        jPanel_Archivo_crear.setLayout(jPanel_Archivo_crearLayout);
        jPanel_Archivo_crearLayout.setHorizontalGroup(
            jPanel_Archivo_crearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_Archivo_crearLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel_Archivo_crearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField_Archivo_Crear, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel_Archivo_crearLayout.createSequentialGroup()
                        .addComponent(jButton_Archivo_crear, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_Archivo_crear1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        jPanel_Archivo_crearLayout.setVerticalGroup(
            jPanel_Archivo_crearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_Archivo_crearLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jTextField_Archivo_Crear, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_Archivo_crearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Archivo_crear)
                    .addComponent(jButton_Archivo_crear1))
                .addGap(14, 14, 14))
        );

        jButton_Archivo_Nuevo.setText("Nuevo Archivo");
        jButton_Archivo_Nuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Archivo_NuevoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton_Archivo_NuevoMouseEntered(evt);
            }
        });
        jButton_Archivo_Nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Archivo_NuevoActionPerformed(evt);
            }
        });

        jButton_Archivo_Abrir.setText("Abrir Archivo");
        jButton_Archivo_Abrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Archivo_AbrirMouseClicked(evt);
            }
        });

        jButton_Archivo_Salvar.setText("Salvar Archivo");
        jButton_Archivo_Salvar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Archivo_SalvarMouseClicked(evt);
            }
        });
        jButton_Archivo_Salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Archivo_SalvarActionPerformed(evt);
            }
        });

        jButton_Archivo_Cerrar.setText("Cerrar Archivo");
        jButton_Archivo_Cerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Archivo_CerrarMouseClicked(evt);
            }
        });

        jButton_Archivo_Nuevo1.setText("Salir");
        jButton_Archivo_Nuevo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Archivo_Nuevo1MouseClicked(evt);
            }
        });

        jLabel_Archivo_currentFile.setBackground(new java.awt.Color(0, 102, 0));
        jLabel_Archivo_currentFile.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel_Archivo_currentFile.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Archivo_currentFile.setText("Archivo Abierto: n\\a");
        jLabel_Archivo_currentFile.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel6.setBackground(new java.awt.Color(0, 102, 0));
        jPanel6.setPreferredSize(new java.awt.Dimension(493, 290));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Standard File Manager");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/carpeta (1).png"))); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addGap(116, 116, 116))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel_ArchivoLayout = new javax.swing.GroupLayout(jPanel_Archivo);
        jPanel_Archivo.setLayout(jPanel_ArchivoLayout);
        jPanel_ArchivoLayout.setHorizontalGroup(
            jPanel_ArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_ArchivoLayout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addGroup(jPanel_ArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel_Archivo_currentFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_Archivo_Nuevo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_Archivo_Salvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_Archivo_Cerrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_Archivo_Nuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_Archivo_Abrir, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel_ArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel_Archivo_crear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(40, 40, 40))
        );
        jPanel_ArchivoLayout.setVerticalGroup(
            jPanel_ArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_ArchivoLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel_ArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_ArchivoLayout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel_Archivo_crear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel_ArchivoLayout.createSequentialGroup()
                        .addComponent(jLabel_Archivo_currentFile, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_Archivo_Nuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(jButton_Archivo_Abrir, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(jButton_Archivo_Salvar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(jButton_Archivo_Cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addComponent(jButton_Archivo_Nuevo1)))
                .addGap(49, 49, 49))
        );

        jTabbedPane_Menu.addTab("Archivo", jPanel_Archivo);

        jPanel_Campos.setBackground(new java.awt.Color(204, 255, 204));

        jLabel_Campos_OpcionesCampo.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel_Campos_OpcionesCampo.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Campos_OpcionesCampo.setText("Opciones Campo:");

        jButton_Campos_Crear.setText("Crear Campo");
        jButton_Campos_Crear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Campos_CrearMouseClicked(evt);
            }
        });
        jButton_Campos_Crear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Campos_CrearActionPerformed(evt);
            }
        });

        jButton_Campos_Listar.setText("Listar Campo");
        jButton_Campos_Listar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Campos_ListarMouseClicked(evt);
            }
        });
        jButton_Campos_Listar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Campos_ListarActionPerformed(evt);
            }
        });

        jButton_Campos_Modificar.setText("Modificar Campo");
        jButton_Campos_Modificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Campos_ModificarMouseClicked(evt);
            }
        });
        jButton_Campos_Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Campos_ModificarActionPerformed(evt);
            }
        });

        jButton_Campos_Eliminar.setText("Eliminar Campo");
        jButton_Campos_Eliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Campos_EliminarMouseClicked(evt);
            }
        });
        jButton_Campos_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Campos_EliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_CamposLayout = new javax.swing.GroupLayout(jPanel_Campos);
        jPanel_Campos.setLayout(jPanel_CamposLayout);
        jPanel_CamposLayout.setHorizontalGroup(
            jPanel_CamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_CamposLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(jPanel_CamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_CamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton_Campos_Listar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_Campos_Crear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_Campos_Modificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_Campos_Eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel_CamposLayout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addComponent(jLabel_Campos_OpcionesCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jPanel_CamposLayout.setVerticalGroup(
            jPanel_CamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_CamposLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel_Campos_OpcionesCampo)
                .addGap(53, 53, 53)
                .addComponent(jButton_Campos_Crear, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(jButton_Campos_Listar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jButton_Campos_Modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jButton_Campos_Eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        jTabbedPane_Menu.addTab("Campos", jPanel_Campos);

        jPanel_Registros.setBackground(new java.awt.Color(204, 255, 204));

        jButton_Registros_introducir.setText("Introducir Registros");
        jButton_Registros_introducir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Registros_introducirMouseClicked(evt);
            }
        });

        jButton_Registros_Modificar.setText("Modificar Registros");
        jButton_Registros_Modificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Registros_ModificarMouseClicked(evt);
            }
        });

        jButton_Registros_Buscar.setText("Buscar Registros");
        jButton_Registros_Buscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Registros_BuscarMouseClicked(evt);
            }
        });

        jButton_Registros_Prueba.setText("Cargar Registros de Prueba");
        jButton_Registros_Prueba.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Registros_PruebaMouseClicked(evt);
            }
        });

        jLabel_Registros_OpcionesRegistros.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel_Registros_OpcionesRegistros.setForeground(new java.awt.Color(0, 0, 0));
        jLabel_Registros_OpcionesRegistros.setText("Opciones registros:");

        jButton_Registros_Listar.setText("Listar Registros");
        jButton_Registros_Listar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Registros_ListarMouseClicked(evt);
            }
        });

        jButton_Registros_Cruzar.setText("Cruzar Archivos");
        jButton_Registros_Cruzar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Registros_CruzarMouseClicked(evt);
            }
        });

        jButton_Registros_borrar.setText("Borrar Registros");
        jButton_Registros_borrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Registros_borrarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel_RegistrosLayout = new javax.swing.GroupLayout(jPanel_Registros);
        jPanel_Registros.setLayout(jPanel_RegistrosLayout);
        jPanel_RegistrosLayout.setHorizontalGroup(
            jPanel_RegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_RegistrosLayout.createSequentialGroup()
                .addGroup(jPanel_RegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_RegistrosLayout.createSequentialGroup()
                        .addGap(310, 310, 310)
                        .addComponent(jLabel_Registros_OpcionesRegistros))
                    .addGroup(jPanel_RegistrosLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(jPanel_RegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton_Registros_Prueba, javax.swing.GroupLayout.PREFERRED_SIZE, 642, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel_RegistrosLayout.createSequentialGroup()
                                .addGroup(jPanel_RegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButton_Registros_Buscar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton_Registros_Modificar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton_Registros_introducir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel_RegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButton_Registros_borrar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton_Registros_Cruzar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton_Registros_Listar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        jPanel_RegistrosLayout.setVerticalGroup(
            jPanel_RegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_RegistrosLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel_Registros_OpcionesRegistros)
                .addGap(56, 56, 56)
                .addGroup(jPanel_RegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_RegistrosLayout.createSequentialGroup()
                        .addComponent(jButton_Registros_introducir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jButton_Registros_Modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jButton_Registros_Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel_RegistrosLayout.createSequentialGroup()
                        .addComponent(jButton_Registros_Listar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jButton_Registros_Cruzar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jButton_Registros_borrar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(45, 45, 45)
                .addComponent(jButton_Registros_Prueba, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        jTabbedPane_Menu.addTab("Registros", jPanel_Registros);

        jPanel7.setBackground(new java.awt.Color(204, 255, 204));

        jPanel8.setBackground(new java.awt.Color(0, 102, 0));

        jButton_Indicie_Crear.setText("Crear Índices ");
        jButton_Indicie_Crear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Indicie_CrearMouseClicked(evt);
            }
        });

        jList_Indices_CrearIndices.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList_Indices_CrearIndices.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList_Indices_CrearIndices.setPreferredSize(new java.awt.Dimension(170, 285));
        jScrollPane5.setViewportView(jList_Indices_CrearIndices);

        jLabel_indices_crearIndices.setText("Archivo: ");
        jLabel_indices_crearIndices.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton_Indicie_Crear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel_indices_crearIndices, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(44, 44, 44))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jLabel_indices_crearIndices)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_Indicie_Crear)
                .addGap(20, 20, 20))
        );

        jPanel9.setBackground(new java.awt.Color(0, 153, 51));

        jList_Indices_ReIndexar.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList_Indices_ReIndexar.setPreferredSize(new java.awt.Dimension(170, 285));
        jScrollPane8.setViewportView(jList_Indices_ReIndexar);

        jButton_Indices_ReIndexar.setText("Re Indexar Archivo");
        jButton_Indices_ReIndexar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_Indices_ReIndexarMouseClicked(evt);
            }
        });

        jLabel6.setText("Archivos de indice: ");
        jLabel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton_Indices_ReIndexar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(44, 44, 44))))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_Indices_ReIndexar)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel_indicesLayout = new javax.swing.GroupLayout(jPanel_indices);
        jPanel_indices.setLayout(jPanel_indicesLayout);
        jPanel_indicesLayout.setHorizontalGroup(
            jPanel_indicesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel_indicesLayout.setVerticalGroup(
            jPanel_indicesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane_Menu.addTab("Indices", jPanel_indices);

        jPanel10.setBackground(new java.awt.Color(204, 255, 204));

        jPanel11.setBackground(new java.awt.Color(0, 102, 0));
        jPanel11.setPreferredSize(new java.awt.Dimension(493, 290));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("      Exportar Excel");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("       Exportar XML");

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/xml (1).png"))); // NOI18N
        jLabel9.setText(" ");

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/excel (1).png"))); // NOI18N
        jLabel10.setText(" ");

        jButton_estandar_Exportar_XML.setText("Exportar a XML Schema");
        jButton_estandar_Exportar_XML.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_estandar_Exportar_XMLMouseClicked(evt);
            }
        });

        jButton_estandar_Exportar_Excel.setText("Exportar a excel");
        jButton_estandar_Exportar_Excel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_estandar_Exportar_ExcelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_estandar_Exportar_Excel, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton_estandar_Exportar_XML, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_estandar_Exportar_Excel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_estandar_Exportar_XML, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 758, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel_EstandarizacionLayout = new javax.swing.GroupLayout(jPanel_Estandarizacion);
        jPanel_Estandarizacion.setLayout(jPanel_EstandarizacionLayout);
        jPanel_EstandarizacionLayout.setHorizontalGroup(
            jPanel_EstandarizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel_EstandarizacionLayout.setVerticalGroup(
            jPanel_EstandarizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane_Menu.addTab("Estandarizacion", jPanel_Estandarizacion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane_Menu)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane_Menu)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_Archivo_SalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Archivo_SalvarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton_Archivo_SalvarActionPerformed

    private void jButton_Archivo_Nuevo1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Archivo_Nuevo1MouseClicked
        // TODO add your handling code here:

        int option = JOptionPane.showConfirmDialog(null, "Esta seguro que quiere salir?\nTodo su progreso sera guardado.", "Salir", JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION) {
            //Guardar todo
            if (!archivo1_principal.getFilename().isEmpty()) {
                try {
                    // TODO add your handling code here:
                    archivo1_principal.close_file();
                    jLabel_Archivo_currentFile.setText("Archivo Abierto: n\\a");

                } catch (IOException ex) {
                    Logger.getLogger(Estru2_proyecto.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            System.exit(0);
        }
    }//GEN-LAST:event_jButton_Archivo_Nuevo1MouseClicked

    private void jButton_Archivo_CerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Archivo_CerrarMouseClicked
        if (archivo1_principal.getFilename().isEmpty()) {
            JOptionPane.showMessageDialog(jPanel_Campos, "No hay archivo abierto");
        } else {
            try {
                // TODO add your handling code here:
                archivo1_principal.close_file();
                btree = new BTree(6);
                jLabel_Archivo_currentFile.setText("Archivo Abierto: n\\a");
                jList_Indices_CrearIndices.setModel(new DefaultListModel<>());
                jLabel_indices_crearIndices.setText("n\\a");

            } catch (IOException ex) {
                Logger.getLogger(Estru2_proyecto.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_jButton_Archivo_CerrarMouseClicked

    private void jButton_Archivo_NuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Archivo_NuevoMouseClicked
        // TODO add your handling code here:
        if (jPanel_Archivo_crear.isVisible()) {
            jPanel_Archivo_crear.setVisible(false);
        } else {
            jPanel_Archivo_crear.setVisible(true);
        }
    }//GEN-LAST:event_jButton_Archivo_NuevoMouseClicked

    private void jTextField_Archivo_CrearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField_Archivo_CrearMouseClicked
        // TODO add your handling code here:
        jTextField_Archivo_Crear.setText("");

    }//GEN-LAST:event_jTextField_Archivo_CrearMouseClicked

    private void jTextField_Archivo_CrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_Archivo_CrearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_Archivo_CrearActionPerformed

    private void jButton_Archivo_AbrirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Archivo_AbrirMouseClicked
        // TODO add your handling code here:
        Select_OpenFile(archivo1_principal);
        jLabel_Archivo_currentFile.setText("Archivo Abierto: " + archivo1_principal.getFilename());
    }//GEN-LAST:event_jButton_Archivo_AbrirMouseClicked

    private void jButton_Archivo_crear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Archivo_crear1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton_Archivo_crear1ActionPerformed

    private void jButton_Archivo_crear1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Archivo_crear1MouseClicked
        // TODO add your handling code here:
        jPanel_Archivo_crear.setVisible(false);
    }//GEN-LAST:event_jButton_Archivo_crear1MouseClicked

    private void jButton_Archivo_SalvarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Archivo_SalvarMouseClicked
        if (archivo1_principal.getFilename() == null || archivo1_principal.getFilename().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Error: Abra o cree un archivo antes");
        } else {
            try {
                if (archivo1_principal.getMetadata() != null) {
                    archivo1_principal.addMetadataToFile();
                    //archivo.addRecordsToFile();
                    JOptionPane.showMessageDialog(jPanel_Campos, "Se guardo de manera exitosa");
                } else {
                    JOptionPane.showMessageDialog(null, "Error: aun no a generado nada para guardar.");
                }

            } catch (IOException ex) {
                Logger.getLogger(Estru2_proyecto.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jButton_Archivo_SalvarMouseClicked

    private void jButton_Campos_ListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Campos_ListarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton_Campos_ListarActionPerformed

    private void jButton_Campos_ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Campos_ModificarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton_Campos_ModificarActionPerformed

    private void jButton_Campos_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Campos_EliminarActionPerformed
        if (archivo1_principal.getFilename() == null || archivo1_principal.getFilename().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Error: Abra o cree un archivo antes");
        } else if (archivo1_principal.getMetadata() == null || archivo1_principal.getMetadata().getCampos() == null || archivo1_principal.getMetadata().getCampos().isEmpty()) {
            JOptionPane.showMessageDialog(null, "No tiene campos para eliminar.");
        } else {

        }
    }//GEN-LAST:event_jButton_Campos_EliminarActionPerformed

    private void jButton_Campos_ListarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Campos_ListarMouseClicked
        if (archivo1_principal.getFilename() == null || archivo1_principal.getFilename().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Error: Abra o cree un archivo antes");
        } else if (archivo1_principal.getMetadata() == null || archivo1_principal.getMetadata().getCampos() == null || archivo1_principal.getMetadata().getCampos().isEmpty()) {
            JOptionPane.showMessageDialog(null, "No tiene campos para listar.");
        } else {
            llenar_Tabla(jTable_Campos_Listar);
            abrirDialog(jDialog_Campos_Listar);
        }

    }//GEN-LAST:event_jButton_Campos_ListarMouseClicked

    private void jButton_Campos_ModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Campos_ModificarMouseClicked

        if (archivo1_principal.getFilename() == null || archivo1_principal.getFilename().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Error: Abra o cree un archivo antes");
        } else if (archivo1_principal.getMetadata() == null || archivo1_principal.getMetadata().getCampos() == null || archivo1_principal.getMetadata().getCampos().isEmpty()) {
            JOptionPane.showMessageDialog(null, "No tiene campos para modificar.");
        } else {
            if (archivo1_principal.cant_Registros() > 0) {
                JOptionPane.showMessageDialog(null, "Error: Ya hay registros no se pueden modificar los campos");
                return;
            }
            jComboBox_Modificar.removeAllItems();
            for (int i = 0; i < archivo1_principal.getMetadata().getCampos().size(); i++) {
                jComboBox_Modificar.addItem(archivo1_principal.getMetadata().getCampos().get(i).getNombre_campo());
            }
            abrirDialog(jDialog_Campos_Modificar);
        }
    }//GEN-LAST:event_jButton_Campos_ModificarMouseClicked

    private void jButton_Campos_CrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Campos_CrearActionPerformed

        if (archivo1_principal.getFilename() == null || archivo1_principal.getFilename().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Error: Abra o cree un archivo antes");
        } else {
            if (archivo1_principal.cant_Registros() > 0) {
                JOptionPane.showMessageDialog(null, "Error: Ya hay registros no se pueden modificar los campos");
                return;
            }
            abrirDialog(jDialog_Campos_Crear);
            jTextField_Campos_Nombre.setText("");
            buttonGroup_Campos_Dato.clearSelection();
            buttonGroup_Campos_Llave.clearSelection();
            jSpinner_Campos_Longitud.setValue(1);
        }
    }//GEN-LAST:event_jButton_Campos_CrearActionPerformed

    private void jTabbedPane_MenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane_MenuMouseClicked

    }//GEN-LAST:event_jTabbedPane_MenuMouseClicked

    private void jTextField_Campos_NombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_Campos_NombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_Campos_NombreActionPerformed

    private void jRadioButton_Campos_IntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_Campos_IntActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_Campos_IntActionPerformed

    private void jRadioButton_Campos_FloatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_Campos_FloatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_Campos_FloatActionPerformed

    private void jRadioButton_Campos_StringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_Campos_StringActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_Campos_StringActionPerformed

    private void jRadioButton_Campos_CharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_Campos_CharActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_Campos_CharActionPerformed

    private void jRadioButton_Campos_NoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_Campos_NoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_Campos_NoActionPerformed

    private void jButton_Campos_RegresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Campos_RegresarMouseClicked
        jDialog_Campos_Crear.setVisible(false);
    }//GEN-LAST:event_jButton_Campos_RegresarMouseClicked

    private void jTabbedPane_MenuStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane_MenuStateChanged

    }//GEN-LAST:event_jTabbedPane_MenuStateChanged

    private void jButton_Archivo_NuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Archivo_NuevoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton_Archivo_NuevoActionPerformed

    private void jButton_Campos_CrearCampoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Campos_CrearCampoMouseClicked
        Campo temp = new Campo();

        // Validación: Verificar si el nombre del campo está vacío
        if (jTextField_Campos_Nombre.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe ingresar un nombre para el campo.");
            return;
        }

        // Validación: Nombre del campo no debe exceder los 25 caracteres
        if (jTextField_Campos_Nombre.getText().length() > 25) {
            JOptionPane.showMessageDialog(null, "El nombre del campo no puede tener más de 25 caracteres.");
            jTextField_Campos_Nombre.setText("");
            return;
        }

        temp.setNombre_campo(jTextField_Campos_Nombre.getText());

        // Validación de tipo de dato seleccionado
        if (jRadioButton_Campos_Bool.isSelected()) {
            temp.setTipo(0);
        } else if (jRadioButton_Campos_Int.isSelected()) {
            temp.setTipo(1);
        } else if (jRadioButton_Campos_Float.isSelected()) {
            temp.setTipo(2);
        } else if (jRadioButton_Campos_String.isSelected()) {
            temp.setTipo(3);
        } else if (jRadioButton_Campos_Char.isSelected()) {
            temp.setTipo(4);
        } else {
            JOptionPane.showMessageDialog(jDialog_Campos_Crear, "Debe seleccionar un tipo de dato.");
            return;
        }

        // Validación de longitud según el tipo de dato
        int longitudSeleccionada = ((int) jSpinner_Campos_Longitud.getValue());
        switch (temp.getTipo()) {
            case 0: // Bool
                if (longitudSeleccionada != 1) {
                    JOptionPane.showMessageDialog(jDialog_Campos_Crear, "Un bool no puede tener una longitud mayor a 1.");
                    return;
                }
                break;
            case 1: // Int
                if (longitudSeleccionada > 8) {
                    JOptionPane.showMessageDialog(jDialog_Campos_Crear, "Un entero no puede tener una longitud mayor a 8.");
                    return;
                }
                break;
            case 2: // Float
                if (longitudSeleccionada > 15) {
                    JOptionPane.showMessageDialog(jDialog_Campos_Crear, "Un float no puede tener una longitud mayor a 15.");
                    return;
                }
                break;
            case 3: // String
                if (longitudSeleccionada > 25) { // Máximo 25 caracteres para String
                    JOptionPane.showMessageDialog(jDialog_Campos_Crear, "Un string no puede tener una longitud mayor a 25.");
                    jSpinner_Campos_Longitud.setValue(1);
                    return;
                }
                break;
            case 4: // Char
                if (longitudSeleccionada != 1) {
                    JOptionPane.showMessageDialog(jDialog_Campos_Crear, "Un char no puede tener una longitud mayor a 1.");
                    return;
                }
                break;
            default:
                JOptionPane.showMessageDialog(jDialog_Campos_Crear, "Tipo de dato no válido.");
                return;
        }

        temp.setLongitud(longitudSeleccionada);

        // Validación de si es llave (iskey)
        if (jRadioButton_Campos_No.isSelected()) {
            temp.setIskey(false);
            temp.setIskey_secundary(false);
        } else if (jRadioButton_Campos_Si.isSelected()) {
            if (temp.getTipo() == 0 && temp.getTipo() == 4) { // Validar que boolean no sea llave
                JOptionPane.showMessageDialog(jDialog_Campos_Crear, "Un campo de tipo boolean/Char no puede ser llave.");
                buttonGroup_Campos_Llave.clearSelection(); // Limpiar selección de llave
                return;
            }
            Object[] options = {"Secondary", "Primary"};

            // Display the JOptionPane
            int result = JOptionPane.showOptionDialog(
                    null,
                    "Va a ser llave secundaria o primaria",
                    "Eleccion",
                    JOptionPane.YES_NO_OPTION, // Use YES_NO_OPTION type for simplicity
                    JOptionPane.QUESTION_MESSAGE, // Icon type
                    null, // Default icon
                    options, // Custom options
                    options[1] // Default option (highlighted)
            );
            if (result == 0) {
                temp.setIskey(false);
                temp.setIskey_secundary(true);
            } else if (result == 1) {
                temp.setIskey(true);
                temp.setIskey_secundary(false);
            } else {
                JOptionPane.showMessageDialog(null, "Error espesifique el tipo de llave");
                return;
            }
        } else {
            JOptionPane.showMessageDialog(jDialog_Campos_Crear, "Debe especificar si es llave.");
            return;
        }

        // Asegurarse de que metadata y campos estén inicializados
        if (archivo1_principal.getMetadata() == null) {
            archivo1_principal.setMetadata(new Metadata());
        }
        if (archivo1_principal.getMetadata().getCampos() == null) {
            archivo1_principal.getMetadata().setCampos(new ArrayList<>());
        }

        // Agregar el campo a la lista de campos
        archivo1_principal.getMetadata().add_campos(temp);

        // Intentar guardar el campo en el archivo1_principal
        try {
            archivo1_principal.addMetadataToFile();
            JOptionPane.showMessageDialog(jDialog_Campos_Crear, "Campo guardado exitosamente.");

            // Limpiar los campos después de guardar
            jTextField_Campos_Nombre.setText("");
            jSpinner_Campos_Longitud.setValue(1);
            buttonGroup_Campos_Dato.clearSelection();
            buttonGroup_Campos_Llave.clearSelection();
        } catch (IOException ex) {
            Logger.getLogger(Estru2_proyecto.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(jDialog_Campos_Crear, "Error al guardar el campo.");
        }

        if (archivo1_principal.getMetadata() != null) {
            DefaultListModel model = new DefaultListModel<>();
            for (String key : archivo1_principal.getMetadata().getKeys().keySet()) {
                if (rootPaneCheckingEnabled) {
                    model.add(model.size(), key);
                }
            }
            jList_Indices_CrearIndices.setModel(model);
            jLabel_indices_crearIndices.setText(archivo1_principal.getFilename());
        }
    }//GEN-LAST:event_jButton_Campos_CrearCampoMouseClicked

    private void jButton_Campos_CrearCampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Campos_CrearCampoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton_Campos_CrearCampoActionPerformed

    private void jButton_Campos_Listar_RegresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Campos_Listar_RegresarMouseClicked
        jDialog_Campos_Listar.setVisible(false);
    }//GEN-LAST:event_jButton_Campos_Listar_RegresarMouseClicked

    private void jButton_Campos_Modificat_ConfirmarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Campos_Modificat_ConfirmarMouseClicked
        String nombre = "";
        int tipo = 0;
        int longitud = 0;
        boolean key = false;
        boolean key2 = false;

        // Validación: Verificar si el nombre del campo está vacío
        if (jTextField_Campos_Modificar_Nombre.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe ingresar un nombre para el campo.");
            return;
        }

        // Validación: Nombre del campo no debe exceder los 25 caracteres
        if (jTextField_Campos_Modificar_Nombre.getText().length() > 25) {
            JOptionPane.showMessageDialog(null, "El nombre del campo no puede tener más de 25 caracteres.");
            jTextField_Campos_Modificar_Nombre.setText("");
            return;
        }

        nombre = jTextField_Campos_Modificar_Nombre.getText();

        // Validación de tipo de dato seleccionado
        if (jRadioButton_Campos_Modificar_Bool.isSelected()) {
            tipo = 0;
        } else if (jRadioButton_Campos_Modificar_Int.isSelected()) {
            tipo = 1;
        } else if (jRadioButton_Campos_Modificar_Float.isSelected()) {
            tipo = 2;
        } else if (jRadioButton_Campos_Modificar_String.isSelected()) {
            tipo = 3;
        } else if (jRadioButton_Campos_Modificar_Char.isSelected()) {
            tipo = 4;
        } else {
            JOptionPane.showMessageDialog(jDialog_Campos_Modificar, "Debe seleccionar un tipo de dato.");
            return;
        }

        // Validación de longitud según el tipo de dato
        int longitudSeleccionada = ((int) jSpinner_Campos_Modificar_Longitud.getValue());
        switch (tipo) {
            case 0: // Bool
                if (longitudSeleccionada != 1) {
                    JOptionPane.showMessageDialog(jDialog_Campos_Modificar, "Un bool no puede tener una longitud mayor a 1.");
                    return;
                }
                break;
            case 1: // Int
                if (longitudSeleccionada > 8) {
                    JOptionPane.showMessageDialog(jDialog_Campos_Modificar, "Un entero no puede tener una longitud mayor a 8.");
                    return;
                }
                break;
            case 2: // Float
                if (longitudSeleccionada > 15) {
                    JOptionPane.showMessageDialog(jDialog_Campos_Modificar, "Un float no puede tener una longitud mayor a 15.");
                    return;
                }
                break;
            case 3: // String
                if (longitudSeleccionada > 25) { // Máximo 25 caracteres para String
                    JOptionPane.showMessageDialog(jDialog_Campos_Modificar, "Un string no puede tener una longitud mayor a 25.");
                    jSpinner_Campos_Modificar_Longitud.setValue(1); // Restablecer el valor del spinner
                    return;
                }
                break;
            case 4: // Char
                if (longitudSeleccionada != 1) {
                    JOptionPane.showMessageDialog(jDialog_Campos_Modificar, "Un char no puede tener una longitud mayor a 1.");
                    return;
                }
                break;
            default:
                JOptionPane.showMessageDialog(jDialog_Campos_Modificar, "Tipo de dato no válido.");
                return;
        }

        longitud = longitudSeleccionada;

        // Validación de la llave (iskey)
        if (jRadioButton_Campos_Modificar_No.isSelected()) {
            key = false;
        } else if (jRadioButton_Campos_Modificar_Si.isSelected()) {
            if (tipo == 0) { // Validar que boolean no sea llave
                JOptionPane.showMessageDialog(jDialog_Campos_Modificar, "Un campo de tipo boolean no puede ser llave.");
                buttonGroup_Campos_Llave.clearSelection(); // Limpiar selección de llave
                return;
            }
            Object[] options = {"Secundaria", "Primaria"};
            int result = JOptionPane.showOptionDialog(
                    null,
                    "¿Va a ser llave secundaria o primaria?",
                    "Elección",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    options,
                    options[1]
            );
            if (result == JOptionPane.YES_OPTION) {
                key2 = true;
            } else if (result == JOptionPane.NO_OPTION) {
                key = true;
            }
        } else {
            JOptionPane.showMessageDialog(jDialog_Campos_Modificar, "Debe especificar si es llave.");
            return;
        }

        // Asegurarse de que metadata y campos estén inicializados
        if (archivo1_principal.getMetadata() == null) {
            archivo1_principal.setMetadata(new Metadata());
        }
        if (archivo1_principal.getMetadata().getCampos() == null) {
            archivo1_principal.getMetadata().setCampos(new ArrayList<>());
        }

        // Verificación adicional para asegurarse de que el campo tiene datos completos
        if (nombre.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe ingresar un nombre para el campo.");
            return;
        }
        if (tipo == -1) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un tipo de dato.");
            return;
        }
        if (longitud <= 0) {
            JOptionPane.showMessageDialog(null, "La longitud debe ser mayor a 0.");
            return;
        }

        // Modificar el campo en la lista de campos
        archivo1_principal.getMetadata().edit_campo(jComboBox_Modificar.getSelectedIndex(), tipo, longitud, nombre, key, key2);

        try {
            archivo1_principal.addMetadataToFile();
            JOptionPane.showMessageDialog(jDialog_Campos_Modificar, "Campo modificado exitosamente.");

            // Limpiar los campos después de guardar el campo
            jTextField_Campos_Modificar_Nombre.setText("");
            jSpinner_Campos_Modificar_Longitud.setValue(1);
            buttonGroup_Campos_Dato.clearSelection();
            buttonGroup_Campos_Llave.clearSelection();
        } catch (IOException ex) {
            Logger.getLogger(Estru2_proyecto.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(jDialog_Campos_Modificar, "Error al modificar el campo.");
        }

        if (archivo1_principal.getMetadata() != null) {
            DefaultListModel model = new DefaultListModel<>();

            for (Map.Entry<String, Integer> entry : archivo1_principal.getMetadata().getKeys().entrySet()) {
                String campo = entry.getKey();  // Field name (key)
                Integer position = entry.getValue();  // Position (value)
                model.add(model.size(), campo);  // If you only need to add the field name to the model
            }

            jList_Indices_CrearIndices.setModel(model);
            jLabel_indices_crearIndices.setText(archivo1_principal.getFilename());
        }
        jDialog_Campos_Modificar.setVisible(false);

    }//GEN-LAST:event_jButton_Campos_Modificat_ConfirmarMouseClicked

    private void jButton_Campos_Modificar_RegresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Campos_Modificar_RegresarMouseClicked
        jDialog_Campos_Modificar.setVisible(false);
    }//GEN-LAST:event_jButton_Campos_Modificar_RegresarMouseClicked

    private void jRadioButton_Campos_Modificar_FloatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_Campos_Modificar_FloatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_Campos_Modificar_FloatActionPerformed

    private void jRadioButton_Campos_Modificar_NoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_Campos_Modificar_NoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_Campos_Modificar_NoActionPerformed

    private void jRadioButton_Campos_Modificar_StringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_Campos_Modificar_StringActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_Campos_Modificar_StringActionPerformed

    private void jTextField_Campos_Modificar_NombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_Campos_Modificar_NombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_Campos_Modificar_NombreActionPerformed

    private void jRadioButton_Campos_Modificar_CharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_Campos_Modificar_CharActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_Campos_Modificar_CharActionPerformed

    private void jRadioButton_Campos_Modificar_IntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_Campos_Modificar_IntActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_Campos_Modificar_IntActionPerformed

    private void jComboBox_ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_ModificarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_ModificarActionPerformed

    private void jComboBox_ModificarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_ModificarItemStateChanged
        if (jComboBox_Modificar.getSelectedIndex() >= 0) {
            jSpinner_Campos_Modificar_Longitud.setEnabled(false);
            Campo c = archivo1_principal.getMetadata().getCampos().get(jComboBox_Modificar.getSelectedIndex());
            jTextField_Campos_Modificar_Nombre.setText(c.getNombre_campo());
            jRadioButton_Campos_Modificar_No.setEnabled(true);
            jRadioButton_Campos_Modificar_Si.setEnabled(true);
            if (c.getTipo() == 0) {
                jRadioButton_Campos_Modificar_Bool.setSelected(true);
                jRadioButton_Campos_Modificar_No.setEnabled(false);
                jRadioButton_Campos_Modificar_Si.setEnabled(false);
            } else if (c.getTipo() == 1) {
                jRadioButton_Campos_Modificar_Int.setSelected(true);
            } else if (c.getTipo() == 2) {
                jRadioButton_Campos_Modificar_Float.setSelected(true);
            } else if (c.getTipo() == 3) {
                jRadioButton_Campos_Modificar_String.setSelected(true);
                jSpinner_Campos_Modificar_Longitud.setEnabled(true);
            } else if (c.getTipo() == 4) {
                jRadioButton_Campos_Modificar_Char.setSelected(true);
                jRadioButton_Campos_Modificar_No.setEnabled(false);
                jRadioButton_Campos_Modificar_Si.setEnabled(false);
            }
            jSpinner_Campos_Modificar_Longitud.setValue(c.getLongitud());
            if (c.isIskey() == false && c.isIskey_secundary() == false) {
                jRadioButton_Campos_Modificar_No.setSelected(true);
            } else {
                jRadioButton_Campos_Modificar_Si.setSelected(true);
            }
        }
    }//GEN-LAST:event_jComboBox_ModificarItemStateChanged

    private void jRadioButton_Campos_Eliminar_CharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_Campos_Eliminar_CharActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_Campos_Eliminar_CharActionPerformed

    private void jRadioButton_Campos_Eliminar_NoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_Campos_Eliminar_NoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_Campos_Eliminar_NoActionPerformed

    private void jTextField_Campos_Eliminar_NombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_Campos_Eliminar_NombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_Campos_Eliminar_NombreActionPerformed

    private void jComboBox_EliminarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_EliminarItemStateChanged
        if (jComboBox_Eliminar.getSelectedIndex() >= 0) {
            Campo c = archivo1_principal.getMetadata().getCampos().get(jComboBox_Eliminar.getSelectedIndex());
            jTextField_Campos_Eliminar_Nombre.setText(c.getNombre_campo());
            if (c.getTipo() == 0) {
                jRadioButton_Campos_Eliminar_Bool.setSelected(true);
            } else if (c.getTipo() == 1) {
                jRadioButton_Campos_Eliminar_Int.setSelected(true);
            } else if (c.getTipo() == 2) {
                jRadioButton_Campos_Eliminar_Float.setSelected(true);
            } else if (c.getTipo() == 3) {
                jRadioButton_Campos_Eliminar_String.setSelected(true);
            } else if (c.getTipo() == 4) {
                jRadioButton_Campos_Eliminar_Char.setSelected(true);
            }
            jTextField_Campos_Eliminar_Longitud.setText(Integer.toString(c.getLongitud()));
            if (c.isIskey() == false) {
                jRadioButton_Campos_Eliminar_No.setSelected(true);
            } else {
                jRadioButton_Campos_Eliminar_Si.setSelected(true);
            }
        }
    }//GEN-LAST:event_jComboBox_EliminarItemStateChanged

    private void jComboBox_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_EliminarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_EliminarActionPerformed

    private void jRadioButton_Campos_Eliminar_IntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_Campos_Eliminar_IntActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_Campos_Eliminar_IntActionPerformed

    private void jRadioButton_Campos_Eliminar_FloatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_Campos_Eliminar_FloatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_Campos_Eliminar_FloatActionPerformed

    private void jButton_Campos_Eliminar_ConfirmarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Campos_Eliminar_ConfirmarMouseClicked
        archivo1_principal.getMetadata().getCampos().remove(jComboBox_Eliminar.getSelectedIndex());
        try {
            archivo1_principal.addMetadataToFile();
            JOptionPane.showMessageDialog(jDialog_Campos_Crear, "Campo eliminado exitosamente.");

            // Limpiar los campos después de guardar el campo
            jTextField_Campos_Nombre.setText("");  // Limpiar nombre del campo
            jSpinner_Campos_Longitud.setValue(1);  // Establecer longitud predeterminada
            buttonGroup_Campos_Dato.clearSelection();
            buttonGroup_Campos_Llave.clearSelection();
        } catch (IOException ex) {
            Logger.getLogger(Estru2_proyecto.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(jDialog_Campos_Crear, "Error al eliminar el campo.");
        }
        if (archivo1_principal.getMetadata() != null) {
            if (archivo1_principal.getMetadata() != null) {
                DefaultListModel model = new DefaultListModel<>();
                for (String key : archivo1_principal.getMetadata().getKeys().keySet()) {
                    model.add(model.size(), key);
                }
                jList_Indices_CrearIndices.setModel(model);
                jLabel_indices_crearIndices.setText(archivo1_principal.getFilename());

            }
        }
        jDialog_Campos_Eliminar.setVisible(false);
    }//GEN-LAST:event_jButton_Campos_Eliminar_ConfirmarMouseClicked

    private void jButton_Campos_Eliminar_RegresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Campos_Eliminar_RegresarMouseClicked
        jDialog_Campos_Eliminar.setVisible(false);
    }//GEN-LAST:event_jButton_Campos_Eliminar_RegresarMouseClicked

    private void jRadioButton_Campos_Eliminar_StringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_Campos_Eliminar_StringActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_Campos_Eliminar_StringActionPerformed

    private void jButton_Campos_EliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Campos_EliminarMouseClicked

        if (archivo1_principal.getFilename() == null || archivo1_principal.getFilename().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Error: Abra o cree un archivo antes");
        } else if (archivo1_principal.getMetadata() == null || archivo1_principal.getMetadata().getCampos() == null || archivo1_principal.getMetadata().getCampos().isEmpty()) {
            JOptionPane.showMessageDialog(null, "No tiene campos para eliminar.");
        } else {
            if (archivo1_principal.cant_Registros() > 0) {
                JOptionPane.showMessageDialog(null, "Error: Ya hay registros no se pueden modificar los campos");
                return;
            }
            jComboBox_Eliminar.removeAllItems();
            for (int i = 0; i < archivo1_principal.getMetadata().getCampos().size(); i++) {
                jComboBox_Eliminar.addItem(archivo1_principal.getMetadata().getCampos().get(i).getNombre_campo());
            }
            jRadioButton_Campos_Eliminar_Bool.setEnabled(false);
            jRadioButton_Campos_Eliminar_Char.setEnabled(false);
            jRadioButton_Campos_Eliminar_Int.setEnabled(false);
            jRadioButton_Campos_Eliminar_Float.setEnabled(false);
            jRadioButton_Campos_Eliminar_String.setEnabled(false);
            jRadioButton_Campos_Eliminar_Si.setEnabled(false);
            jRadioButton_Campos_Eliminar_No.setEnabled(false);
            abrirDialog(jDialog_Campos_Eliminar);
        }
    }//GEN-LAST:event_jButton_Campos_EliminarMouseClicked

    private void jTextField_Campos_Eliminar_LongitudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_Campos_Eliminar_LongitudActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_Campos_Eliminar_LongitudActionPerformed

    private void jRadioButton_Campos_StringStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButton_Campos_StringStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jRadioButton_Campos_StringStateChanged

    private void jRadioButton_Campos_StringItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButton_Campos_StringItemStateChanged
        // TODO add your handling code here:
        if (!jSpinner_Campos_Longitud.isEnabled()) {
            jSpinner_Campos_Longitud.setEnabled(true);
        } else {
            jSpinner_Campos_Longitud.setEnabled(false);
        }
    }//GEN-LAST:event_jRadioButton_Campos_StringItemStateChanged

    private void jButton_Registros_ModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Registros_ModificarMouseClicked
        // TODO add your handling code here:
        //Modificar registro
        // Verificar que se haya abierto o creado un archivo1_principal
        if (archivo1_principal.getFilename() == null || archivo1_principal.getFilename().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Error: Abra o cree un archivo antes.");
            return;
        }

        try {
            // Solicitar el RRN del registro a modificar
            String rrnStr = JOptionPane.showInputDialog("Ingrese la clave principal del registro que desea modificar:");

            if (rrnStr == null || rrnStr.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Debe ingresar un RRN válido.");
                return;
            }
            Object llave = convertirValor(archivo1_principal.getMetadata().getKeyElement().getTipo(), rrnStr);

            BTreeNode node = btree.search(llave);
            if (node == null) {
                JOptionPane.showMessageDialog(null, "No se encontro");
                return;
            }
            int x = node.binarySearch(llave);
            if (x < 0) {
                return;
            }
            long RRN = node.getKeys()[x].getRRN();
            Registro registro = archivo1_principal.LoadRegistro(RRN);

            // Verificar si el registro existe y no está marcado como eliminado
            if (registro == null || registro.isBorrado()) {
                JOptionPane.showMessageDialog(null, "El registro no existe o está marcado como eliminado.");
                return;
            }

            // Preparar los nuevos datos
            ArrayList<Object> nuevosDatos = new ArrayList<>();
            ArrayList<Campo> campos = archivo1_principal.getMetadata().getCampos();

            // Iterar sobre cada campo y solicitar nuevo valor
            for (int i = 0; i < campos.size(); i++) {
                Campo campo = campos.get(i);
                if (!campo.iskey && !campo.iskey_secundary) {
                    String valorActual = registro.getData().get(i).toString();
                    String nuevoValor = JOptionPane.showInputDialog(
                            "Ingrese el nuevo valor para el campo '" + campo.getNombre_campo() + "' (Actual: " + valorActual + "):",
                            valorActual
                    );
                    // Validar y convertir el nuevo valor
                    if (nuevoValor != null && !nuevoValor.isEmpty()) {
                        if (determineMatch(campo.getTipo(), nuevoValor)) {
                            nuevosDatos.add(convertirValor(campo.getTipo(), nuevoValor));
                        } else {
                            JOptionPane.showMessageDialog(null, "El valor ingresado para el campo '" + campo.getNombre_campo() + "' no es válido.");
                            return;
                        }
                    } else {
                        nuevosDatos.add(registro.getData().get(i)); // Mantener el valor actual
                    }
                }
            }

            // Intentar modificar el registro
            if (archivo1_principal.modificarRegistro((int) RRN, nuevosDatos)) {
                JOptionPane.showMessageDialog(null, "El registro fue modificado exitosamente.");
            } else {
                JOptionPane.showMessageDialog(null, "No se pudo modificar el registro.");
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Debe ingresar un número válido para el RRN.");
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Ocurrió un error al intentar modificar el registro.");
        }
    }

    // Método para convertir el valor ingresado al tipo correcto
    private Object convertirValor(int tipo, String valor) {
        switch (tipo) {
            case 0: // Boolean
                return Boolean.parseBoolean(valor);
            case 1: // Entero
                return Integer.parseInt(valor);
            case 2: // Flotante
                return Float.parseFloat(valor);
            case 3: // Cadena
                return valor;
            default:
                throw new IllegalArgumentException("Tipo no soportado: " + tipo);
        }
    }//GEN-LAST:event_jButton_Registros_ModificarMouseClicked

    private void jButton_Registros_BuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Registros_BuscarMouseClicked
        // TODO add your handling code here:
        if (archivo1_principal.getFilename() == null || archivo1_principal.getFilename().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Error: Abra o cree un archivo antes.");
            return;
        }
        String userInput = JOptionPane.showInputDialog("Ingrese la clave de búsqueda:");
        Object claveBusqueda; // Declare as Object to handle various types
        if (userInput == null || userInput.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Error: No ingresó ninguna clave de búsqueda.");
            return;
        }
        int keyType = archivo1_principal.getMetadata().getKeyElement().getTipo();

        // Parse the user input based on the type
        switch (keyType) {
            case 1: // Integer
                claveBusqueda = Integer.parseInt(userInput);
                break;
            case 2: // Float
                claveBusqueda = Float.parseFloat(userInput);
                break;
            case 3: // String
                claveBusqueda = userInput; // No conversion needed
                break;
            default:
                throw new IllegalArgumentException("Tipo de clave desconocido: " + keyType);
        }

        Registro encontrado = archivo1_principal.buscarRegistroConArbol(claveBusqueda, btree);
        //tipo: 0 = boolean, 1 = int, 2 = float, 3 = string, 4 = char
        if (claveBusqueda == null) {
            JOptionPane.showMessageDialog(null, "Error: No ingresó ninguna clave de búsqueda.");
            return;
        }

        // Aquí definimos el índice del campo que es la clave primaria (esto depende de la estructura de tu archivo y metadata)
        int posicionClave = archivo1_principal.getMetadata().getKeyElement_pos();

        // Realizar la búsqueda en el árbol B
        if (encontrado != null) {
            // Si encontramos el registro, mostrar los datos en la tabla
            DefaultTableModel model = new DefaultTableModel();
            for (Campo campo : archivo1_principal.getMetadata().getCampos()) {
                model.addColumn(campo.getNombre_campo());
            }
            model.addRow(encontrado.getData().toArray());
            jTable_Registros_buscar.setModel(model);
            abrirDialog(jDialog_Registros_buscar);
        } else {
            JOptionPane.showMessageDialog(null, "Registro no encontrado.");
        }
    }//GEN-LAST:event_jButton_Registros_BuscarMouseClicked

    private void jButton_Registros_PruebaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Registros_PruebaMouseClicked
        // TODO add your handling code here:
        File file1 = new File("./Registros/Personas.txt");
        File file2 = new File("./Registros/Cuidades.txt");
        if (!file1.exists()) {
            try {
                file1.createNewFile();
            } catch (IOException ex) {
                Logger.getLogger(Estru2_proyecto.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            file1.delete();
            try {
                file1.createNewFile();
            } catch (IOException ex) {
                Logger.getLogger(Estru2_proyecto.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if (!file2.exists()) {
            try {
                file2.createNewFile();
            } catch (IOException ex) {

            }
        } else {
            file2.delete();
            try {
                file2.createNewFile();
            } catch (IOException ex) {

            }
        }
        CrearRegistrosPrueba_archivoPersona("Personas", file1);
        CrearRegistrosPrueba_archivoCuidad("Cuidades", file2);
        File folder = new File("./ArbolesB/");
        File[] files = folder.listFiles();
        DefaultListModel model = new DefaultListModel<String>();
        for (File file : files) {
            if (file.getName().endsWith(".dat")) {
                model.add(model.size(), file.getName());
            }
        }
        jList_Indices_ReIndexar.setModel(model);
    }//GEN-LAST:event_jButton_Registros_PruebaMouseClicked

    private void jButton_Registros_CruzarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Registros_CruzarMouseClicked
        // TODO add your handling code here:
        if (archivo1_principal.getFilename() == null || archivo1_principal.getFilename().isEmpty() || archivo1_principal.getMetadata() == null) {
            JOptionPane.showMessageDialog(null, "Error: Abra, llene o cree el archivo antes.");
            return;
        } else {
            JOptionPane.showMessageDialog(null, "A continuación seleccione el archivo secundario para cruzar");
            Select_OpenFile(archivo2_temporal);
            if (archivo2_temporal.getMetadata() != null) {
                loadJList(archivo1_principal, jList_Registros_Cruzar_Campos1, jLabel_Registros_Cruzar_Archivo1);
                loadJList(archivo2_temporal, jList_Registros_Cruzar_Campos2, jLabel_Registros_Cruzar_Archivo2);
                loadJComboBox(archivo1_principal, jComboBox_Registros_cruzar1);
                loadJComboBox(archivo2_temporal, jComboBox_Registros_cruzar2);
                abrirDialog(jDialog_Registros_cruzar);
            } else {
                JOptionPane.showMessageDialog(null, "El archivo selecionado esta vacio");
            }
        }

    }//GEN-LAST:event_jButton_Registros_CruzarMouseClicked

    private void jButton_Registros_borrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Registros_borrarMouseClicked
        // TODO add your handling code here:
        //borrar registro
        // Verificar que se haya abierto o creado un archivo1_principal
        if (archivo1_principal.getFilename() == null || archivo1_principal.getFilename().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Error: Abra o cree un archivo antes.");
            return;
        }

        String userInput = JOptionPane.showInputDialog("Ingrese la clave del registro a borrar:");

        int keyType = archivo1_principal.getMetadata().getKeyElement().getTipo();
        if (userInput == null || userInput.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Error: No ingresó ninguna clave de búsqueda.");
            return;
        }
        // Parse the user input based on the type
        switch (keyType) {
            case 1: { // Integer
                Integer claveBusqueda = Integer.parseInt(userInput);
                if (claveBusqueda == null) {
                    JOptionPane.showMessageDialog(null, "Error: No ingresó ninguna clave.");
                    return;
                }

                // Realizar la búsqueda en el árbol B para encontrar el registro
                Registro encontrado = archivo1_principal.buscarRegistroConArbol(claveBusqueda, btree);

                if (encontrado != null) {
                    // Confirmación de eliminación
                    int confirmacion = JOptionPane.showConfirmDialog(null, "¿Está seguro de que desea borrar este registro?");
                    if (confirmacion == JOptionPane.YES_OPTION) {
                        // Intentar borrar el registro tanto en el árbol como en el archivo
                        boolean exito = archivo1_principal.borrarRegistroConArbol(claveBusqueda, btree);
                        if (exito) {
                            guardarArbolEnArchivo(archivo1_principal, archivo1_principal.getMetadata().getKeyElement().getNombre_campo(), btree);
                            JOptionPane.showMessageDialog(null, "Registro borrado con éxito.");
                        } else {
                            JOptionPane.showMessageDialog(null, "Error al intentar borrar el registro.");
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Registro no encontrado.");
                }
            }
            break;
            case 2: { // Float
                Float claveBusqueda = Float.parseFloat(userInput);
                if (claveBusqueda == null) {
                    JOptionPane.showMessageDialog(null, "Error: No ingresó ninguna clave.");
                    return;
                }

                // Realizar la búsqueda en el árbol B para encontrar el registro
                Registro encontrado = archivo1_principal.buscarRegistroConArbol(claveBusqueda, btree);

                if (encontrado != null) {
                    // Confirmación de eliminación
                    int confirmacion = JOptionPane.showConfirmDialog(null, "¿Está seguro de que desea borrar este registro?");
                    if (confirmacion == JOptionPane.YES_OPTION) {
                        // Intentar borrar el registro tanto en el árbol como en el archivo
                        boolean exito = archivo1_principal.borrarRegistroConArbol(claveBusqueda, btree);
                        if (exito) {
                            JOptionPane.showMessageDialog(null, "Registro borrado con éxito.");
                        } else {
                            JOptionPane.showMessageDialog(null, "Error al intentar borrar el registro.");
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Registro no encontrado.");
                }
            }
            break;
            case 3: { // String
                String claveBusqueda = userInput; // No conversion needed
                if (claveBusqueda == null) {
                    JOptionPane.showMessageDialog(null, "Error: No ingresó ninguna clave.");
                    return;
                }

                // Realizar la búsqueda en el árbol B para encontrar el registro
                Registro encontrado = archivo1_principal.buscarRegistroConArbol(claveBusqueda, btree);

                if (encontrado != null) {
                    // Confirmación de eliminación
                    int confirmacion = JOptionPane.showConfirmDialog(null, "¿Está seguro de que desea borrar este registro?");
                    if (confirmacion == JOptionPane.YES_OPTION) {
                        // Intentar borrar el registro tanto en el árbol como en el archivo
                        boolean exito = archivo1_principal.borrarRegistroConArbol(claveBusqueda, btree);
                        if (exito) {
                            JOptionPane.showMessageDialog(null, "Registro borrado con éxito.");
                        } else {
                            JOptionPane.showMessageDialog(null, "Error al intentar borrar el registro.");
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Registro no encontrado.");
                }
            }
            break;
            default:
                throw new IllegalArgumentException("Tipo de clave desconocido: " + keyType);
        }

    }//GEN-LAST:event_jButton_Registros_borrarMouseClicked

    private void jButton_Archivo_crearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Archivo_crearMouseClicked
        // TODO add your handling code here:
        if (!jTextField_Archivo_Crear.getText().isEmpty() && check_name(jTextField_Archivo_Crear.getText())) {
            if (archivo1_principal.create_file(jTextField_Archivo_Crear.getText())) {
                jLabel_Archivo_currentFile.setText("Archivo Abierto: " + archivo1_principal.getFilename());
                jPanel_Archivo_crear.setVisible(false);
                jTextField_Archivo_Crear.setText("Ingrese el nombre del archivo...");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Error: Nombre no valido");
        }
    }//GEN-LAST:event_jButton_Archivo_crearMouseClicked

    private void jButton_Registros_introducirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Registros_introducirMouseClicked
        // TODO add your handling code here:
        if (archivo1_principal.getFilename() == null || archivo1_principal.getFilename().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Error: Abra o cree un archivo antes");
        } else {
            this.setVisible(false);
            DefaultTableModel model = new DefaultTableModel();
            //creando la tabla
            ArrayList<Campo> temp_campos = archivo1_principal.getMetadata().getCampos();

            for (Campo campo : temp_campos) {
                model.addColumn(campo.getNombre_campo());
            }
            model.setRowCount(1);
            jTable_Registro_introducir.setModel(model);
            //hacer lo mismo para 
            for (int i = 0; i < jTable_Registro_introducir.getColumnCount(); i++) {
                switch (temp_campos.get(i).getTipo()) {
                    case 0: {
                        DefaultCellEditor editor = new DefaultCellEditor(new JCheckBox());
                        jTable_Registro_introducir.getColumnModel().getColumn(i).setCellEditor(editor);
                    }
                    break;
                    case 1: {
                        //crear el editor para que solo accepte
                        NumberFormat integerFormat = NumberFormat.getIntegerInstance();
                        integerFormat.setGroupingUsed(false);
                        NumberFormatter numberFormatter = new NumberFormatter(integerFormat);
                        numberFormatter.setValueClass(Integer.class);
                        numberFormatter.setAllowsInvalid(false);
                        numberFormatter.setMinimum(Integer.MIN_VALUE);
                        numberFormatter.setMaximum(Integer.MAX_VALUE);
                        JFormattedTextField intField = new JFormattedTextField(numberFormatter);
                        DefaultCellEditor editor = new DefaultCellEditor(intField);

                        jTable_Registro_introducir.getColumnModel().getColumn(i).setCellEditor(editor);
                    }
                    break;
                    case 2: {
                        NumberFormat floatFormat = NumberFormat.getNumberInstance();
                        floatFormat.setGroupingUsed(false);
                        NumberFormatter numberFormatter = new NumberFormatter(floatFormat);
                        numberFormatter.setValueClass(Float.class);
                        numberFormatter.setAllowsInvalid(false);
                        numberFormatter.setMinimum(Float.MIN_VALUE);
                        numberFormatter.setMaximum(Float.MAX_VALUE);
                        JFormattedTextField floatField = new JFormattedTextField(numberFormatter);
                        DefaultCellEditor editor = new DefaultCellEditor(floatField);

                        jTable_Registro_introducir.getColumnModel().getColumn(i).setCellEditor(editor);
                    }
                    break;
                }
            }
            abrirDialog(jDialog_Registros_Introducir);
        }
    }//GEN-LAST:event_jButton_Registros_introducirMouseClicked

    private void jButton_Registros_RegresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Registros_RegresarMouseClicked
        // TODO add your handling code here:
        jTable_Registro_introducir.setModel(new DefaultTableModel());
        this.setVisible(true);
        jDialog_Registros_Introducir.setVisible(false);
    }//GEN-LAST:event_jButton_Registros_RegresarMouseClicked

    private void jButton_IntroducirRegistros_crearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_IntroducirRegistros_crearMouseClicked
        // TODO add your handling code here:

        if (jTable_Registro_introducir.isEditing()) {
            jTable_Registro_introducir.getCellEditor().stopCellEditing();
        }
        DefaultTableModel model = (DefaultTableModel) jTable_Registro_introducir.getModel();
        ArrayList<Object> datos = new ArrayList<>();

        // Validación de datos según los tipos definidos
        for (int i = 0; i < model.getColumnCount(); i++) {
            Object temp = model.getValueAt(0, i);
            if (determineMatch(archivo1_principal.getMetadata().getCampos().get(i).getTipo(), temp)) {

                datos.add(temp);
            } else {
                JOptionPane.showMessageDialog(null, "Asegúrese que el dato en la columna " + i + " de la línea 1 esté ingresado correctamente.");
                return;
            }
        }
        Registro registro = new Registro(datos);
        try {

            int keyIndex = archivo1_principal.getMetadata().getKeyElement_pos();

            // Obtener la clave principal del registro
            if (keyIndex == -1) {
                JOptionPane.showMessageDialog(null, "No se ha definido una clave principal.");
                return;
            }
            Llave key;
            switch (archivo1_principal.getMetadata().getKeyElement().getTipo()) {
                case 1: // int
                    key = new Llave(Integer.parseInt(datos.get(keyIndex).toString()), archivo1_principal.getLatest_modified());
                    break;
                case 2: // float
                    key = new Llave(Float.parseFloat(datos.get(keyIndex).toString()), archivo1_principal.getLatest_modified());
                    break;
                case 3: // string
                    key = new Llave(datos.get(keyIndex).toString(), archivo1_principal.getLatest_modified());
                    break;
                default:
                    key = new Llave(datos.get(keyIndex).toString(), archivo1_principal.getLatest_modified());
            }
            
            if (btree == null) {
                btree = new BTree(6);
            }
            if (btree.search(key.getKey()) != null) {
                JOptionPane.showMessageDialog(null, "No se puede insertar elementos repetidos");
            } else {
                btree = cargarArbolDesdeArchivo(archivo1_principal, archivo1_principal.getMetadata().getKeyElement().getNombre_campo());
                // Introducir registro en archivo principal
                if (btree == null) {
                    btree = new BTree(6);
                }
                archivo1_principal.introducirRegistro(registro);
                // Insertar clave en el árbol B

                btree.insert(key);
                // Guardar el árbol B en un archivo binario
                btree.printTree();
                guardarArbolEnArchivo(archivo1_principal, archivo1_principal.getMetadata().getKeyElement().getNombre_campo(), btree);
                JOptionPane.showMessageDialog(null, "Se ha creado el registro y actualizado el árbol B.");
            }

            jDialog_Registros_Introducir.show(false);
            this.show(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al introducir: " + e.getMessage());
        }

        File folder = new File("./ArbolesB/");
        File[] files = folder.listFiles();
        DefaultListModel model1 = new DefaultListModel<String>();
        for (File file : files) {
            if (file.getName().endsWith(".dat")) {
                model1.add(model1.size(), file.getName());
            }
        }
        jList_Indices_ReIndexar.setModel(model1);
    }//GEN-LAST:event_jButton_IntroducirRegistros_crearMouseClicked

    private void jTable_Registro_introducirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable_Registro_introducirKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            // Deselect any selected rows/cells
            jTable_Registro_introducir.clearSelection();
        }
    }//GEN-LAST:event_jTable_Registro_introducirKeyPressed

    private void jButton_Registros_ListarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Registros_ListarMouseClicked
        // TODO add your handling code here:
        if (archivo1_principal.getFilename() == null || archivo1_principal.getFilename().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Error: Abra o cree un archivo antes");
        } else {
            long registros = archivo1_principal.cant_Registros();
            if (registros == 0) {
                JOptionPane.showMessageDialog(null, "Intente ingresar registros antes de ");
            } else if (registros > 0) {
                DefaultTableModel model = new DefaultTableModel();
                for (Campo campo : archivo1_principal.getMetadata().getCampos()) {
                    model.addColumn(campo.getNombre_campo());
                }

                int max_lim = 24;
                if (registros >= max_lim) {
                    for (int i = 0; i < max_lim; i++) {
                        Registro registro = archivo1_principal.LoadRegistro(i);
                        if (!registro.isBorrado()) {
                            ArrayList<Object> temp = registro.getData();
                            model.addRow(temp.toArray());

                        } else {
                            max_lim++;
                        }
                    }
                } else {
                    for (int i = 0; i < registros; i++) {
                        Registro registro = archivo1_principal.LoadRegistro(i);
                        if (!registro.isBorrado()) {
                            ArrayList<Object> temp = registro.getData();
                            model.addRow(temp.toArray());
                        }
                    }
                }
                jTable_Registros_listar.setModel(model);
                abrirDialog(jDialog_Registros_listar);
            } else {
                JOptionPane.showMessageDialog(null, "Error: cantidad de registros");
            }
        }
    }//GEN-LAST:event_jButton_Registros_ListarMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        jDialog_Registros_listar.setVisible(false);
        jTable_Registros_listar.setModel(new DefaultTableModel());
        this.setVisible(true);
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton_Archivo_NuevoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Archivo_NuevoMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton_Archivo_NuevoMouseEntered

    private void jRadioButton_Campos_SiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton_Campos_SiMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jRadioButton_Campos_SiMouseClicked

    private void jRadioButton_Campos_CharMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton_Campos_CharMouseClicked
        // TODO add your handling code here:
        if (jRadioButton_Campos_Char.isSelected()) {
            jRadioButton_Campos_Si.setEnabled(false);
            jRadioButton_Campos_No.setSelected(true);
        }
    }//GEN-LAST:event_jRadioButton_Campos_CharMouseClicked

    private void jRadioButton_Campos_IntMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton_Campos_IntMouseClicked
        // TODO add your handling code here:
        jRadioButton_Campos_Si.setEnabled(true);

    }//GEN-LAST:event_jRadioButton_Campos_IntMouseClicked

    private void jRadioButton_Campos_FloatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton_Campos_FloatMouseClicked
        // TODO add your handling code here:
        jRadioButton_Campos_Si.setEnabled(true);

    }//GEN-LAST:event_jRadioButton_Campos_FloatMouseClicked

    private void jRadioButton_Campos_StringMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton_Campos_StringMouseClicked
        // TODO add your handling code here:
        jRadioButton_Campos_Si.setEnabled(true);

    }//GEN-LAST:event_jRadioButton_Campos_StringMouseClicked

    private void jRadioButton_Campos_BoolMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton_Campos_BoolMouseClicked
        // TODO add your handling code here:
        if (jRadioButton_Campos_Bool.isSelected()) {
            jRadioButton_Campos_Si.setEnabled(false);
            jRadioButton_Campos_No.setSelected(true);
        }
    }//GEN-LAST:event_jRadioButton_Campos_BoolMouseClicked

    private void jButton_Registros_Cruzar_CruzarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Registros_Cruzar_CruzarMouseClicked
        // TODO add your handling code here:
        if (jList_Registros_Cruzar_Campos1.isSelectionEmpty() || jList_Registros_Cruzar_Campos2.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(jDialog_Registros_cruzar, "Error: porfavor selecione campos para mostrar");
            return;
        }
        if (jComboBox_Registros_cruzar1.getSelectedItem() == null || jComboBox_Registros_cruzar2.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(jDialog_Registros_cruzar, "Error: porfavor selecione campos para relacionar con");

        }
        Cruzar();
        this.setVisible(true);
        jDialog_Registros_cruzar.setVisible(false);

    }//GEN-LAST:event_jButton_Registros_Cruzar_CruzarMouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        jDialog_Registros_cruzar.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton_Indicie_CrearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Indicie_CrearMouseClicked
        // TODO add your handling code here:
        if (archivo1_principal == null) {
            return;
        }
        if (archivo1_principal.cant_Registros() > 0) {
            JOptionPane.showMessageDialog(null, "Error: Y");
            return;
        }
        if (jList_Indices_CrearIndices.getModel().getSize() != 0) {
            if (jList_Indices_CrearIndices.isSelectionEmpty()) {
                JOptionPane.showMessageDialog(null, "Selecione un campo para crear un archivo de indices correspondiente.");
                return;
            }
            int option = JOptionPane.showInternalConfirmDialog(null, "Esta seguro que desea continuar?", "Confirmacion", JOptionPane.YES_NO_OPTION);
            if (option == 0) {
                String name = jList_Indices_CrearIndices.getSelectedValue();

                int key_pos = archivo1_principal.getMetadata().getKeys().get(name);

                BTree btree = new BTree(6);
                long cant_Registros = archivo1_principal.cant_Registros();
                if (cant_Registros != 0) {
                    for (int i = 0; i < cant_Registros; i++) {
                        Registro registro = archivo1_principal.LoadRegistro(i);
                        Llave key;
                        switch (archivo1_principal.getMetadata().getCampos().get(key_pos).getTipo()) {
                            case 1: // int
                                key = new Llave(Integer.parseInt(registro.getData().get(key_pos).toString()), i);
                                break;
                            case 2: // float
                                key = new Llave(Float.parseFloat(registro.getData().get(key_pos).toString()), i);
                                break;
                            case 3: // string
                                key = new Llave(registro.getData().get(key_pos).toString(), i);
                                break;
                            default:
                                key = new Llave(registro.getData().get(key_pos).toString(), i);
                        }
                        btree.insert(key);
                    }

                    guardarArbolEnArchivo(archivo1_principal, archivo1_principal.getMetadata().getCampos().get(key_pos).getNombre_campo(), btree);
                    JOptionPane.showMessageDialog(null, "Se ha creado el Archivo en ./Btree/");
                    btree.printTree();
                } else {
                    JOptionPane.showMessageDialog(null, "Intente ingresar registros en el archivo antes de continuar");
                }
            }
        }
        File folder = new File("./ArbolesB/");
        File[] files = folder.listFiles();
        DefaultListModel model = new DefaultListModel<String>();
        for (File file : files) {
            if (file.getName().endsWith(".dat")) {
                model.add(model.size(), file.getName());
            }
        }
        jList_Indices_ReIndexar.setModel(model);
    }//GEN-LAST:event_jButton_Indicie_CrearMouseClicked

    private void jButton_Indices_ReIndexarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Indices_ReIndexarMouseClicked
        // TODO add your handling code here:
        if (jList_Indices_ReIndexar.isSelectionEmpty()) {
            return;
        } else {
            String filename = "./ArbolesB/" + jList_Indices_ReIndexar.getSelectedValue(); // Nombre completo del archivo
            File file = new File(filename);

            if (!file.exists()) {
                JOptionPane.showMessageDialog(null, "Error: El archivo no existe o fue movido de direccion ");
                return;
            }
            try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(filename))) {
                BTree temporal = (BTree) ois.readObject();

                Archivo archivo = new Archivo();

                int indexOf1 = jList_Indices_ReIndexar.getSelectedValue().indexOf("-");
                int indexOf2 = jList_Indices_ReIndexar.getSelectedValue().indexOf(".");
                if (indexOf1 != -1 && indexOf2 != -1) {

                    if (archivo.open_file(new File(temporal.getFather_filepath()))) {
                        String fieldname = jList_Indices_ReIndexar.getSelectedValue().substring(indexOf1 + 1, indexOf2);
                        HashMap<String, Integer> keys = archivo.getMetadata().getKeys();
                        int pos = 0;
                        if (keys.containsKey(fieldname)) {
                            pos = keys.get(fieldname);
                        } else {
                            JOptionPane.showMessageDialog(null, "Error: Campos no concuerdan");
                            return;
                        }

                        //Crear nuevo arbol B
                        BTree NewTree = new BTree(6);

                        for (long i = 0; i < archivo.cant_Registros(); i++) {
                            Registro registro = archivo.LoadRegistro(i);
                            if (!registro.isBorrado()) {
                                Llave key;
                                switch (archivo.getMetadata().getCampos().get(pos).getTipo()) {
                                    case 1: // int
                                        key = new Llave(Integer.parseInt(registro.getData().get(pos).toString()), i);
                                        break;
                                    case 2: // float
                                        key = new Llave(Float.parseFloat(registro.getData().get(pos).toString()), i);
                                        break;
                                    case 3: // string
                                        key = new Llave(registro.getData().get(pos).toString(), i);
                                        break;
                                    default:
                                        key = new Llave(registro.getData().get(pos).toString(), i);
                                }
                                NewTree.insert(key);
                            }
                        }
                        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("./ArbolesB/" + archivo.getFilename() + "-" + fieldname + ".dat"))) {
                            NewTree.setFather_filepath(archivo.getFileRegistros().getPath());
                            oos.writeObject(NewTree);
                            JOptionPane.showMessageDialog(null, "Se ha vuelto a generar el arbol en:" + "./ArbolesB/" + archivo.getFilename() + "-" + fieldname + ".dat");
                        } catch (IOException e) {
                            JOptionPane.showMessageDialog(null, "Error al guardar el árbol B en el archivo: " + e.getMessage());
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Error: El archivo que se introdujo esta vacio o hay un error con su estructura.");
                    }
                }

            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Error al cargar el archivo: " + e.getMessage());
            } catch (ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, "No se pudo encontrar la clase BTree: " + e.getMessage());
            }

        }
    }//GEN-LAST:event_jButton_Indices_ReIndexarMouseClicked

    private void jButton_estandar_Exportar_XMLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_estandar_Exportar_XMLMouseClicked
        // TODO add your handling code here:
        if (archivo1_principal == null || archivo1_principal.getMetadata() == null) {
            JOptionPane.showMessageDialog(null, "Error: Carge un archivo con informacion antes de exportar");
            return;
        }
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Seleccionar ubicacion para guardar el archivo XML");
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnValue = fileChooser.showSaveDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedDirectory = fileChooser.getSelectedFile();

            String fileName = JOptionPane.showInputDialog("Introduce el nombre del archivo (sin extension):");
            if (fileName == null || fileName.trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Error: El nombre del archivo no puede estar vacío.");
                return;
            }
            if (!fileName.matches("[a-zA-Z0-9_\\-]+")) {
                JOptionPane.showMessageDialog(null, "Error: El nombre del archivo contiene caracteres no válidos.");
                return;
            }
            String temp = fileName;

            if (!fileName.endsWith(".xml")) {
                fileName += ".xml";
            }

            File fileToSave = new File(selectedDirectory, fileName);
            archivo1_principal.exportToXMLSchema(fileToSave.getAbsolutePath(), temp);
            JOptionPane.showMessageDialog(null, "Archivo exportado exitosamente a: " + fileToSave.getAbsolutePath());
        }
    }//GEN-LAST:event_jButton_estandar_Exportar_XMLMouseClicked

    private void jButton_estandar_Exportar_ExcelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_estandar_Exportar_ExcelMouseClicked
        // TODO add your handling code here:
        exportarDatosAExcel();
    }//GEN-LAST:event_jButton_estandar_Exportar_ExcelMouseClicked

    private void jButton_Campos_CrearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_Campos_CrearMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton_Campos_CrearMouseClicked

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Estru2_proyecto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Estru2_proyecto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Estru2_proyecto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Estru2_proyecto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Estru2_proyecto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup_Campos_Dato;
    private javax.swing.ButtonGroup buttonGroup_Campos_Llave;
    private javax.swing.ButtonGroup buttonGroup_EliminarLlave;
    private javax.swing.ButtonGroup buttonGroup_EliminarTipo;
    private javax.swing.ButtonGroup buttonGroup_ModificarLlave;
    private javax.swing.ButtonGroup buttonGroup_ModificarTipo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton_Archivo_Abrir;
    private javax.swing.JButton jButton_Archivo_Cerrar;
    private javax.swing.JButton jButton_Archivo_Nuevo;
    private javax.swing.JButton jButton_Archivo_Nuevo1;
    private javax.swing.JButton jButton_Archivo_Salvar;
    private javax.swing.JButton jButton_Archivo_crear;
    private javax.swing.JButton jButton_Archivo_crear1;
    private javax.swing.JButton jButton_Campos_Crear;
    private javax.swing.JButton jButton_Campos_CrearCampo;
    private javax.swing.JButton jButton_Campos_Eliminar;
    private javax.swing.JButton jButton_Campos_Eliminar_Confirmar;
    private javax.swing.JButton jButton_Campos_Eliminar_Regresar;
    private javax.swing.JButton jButton_Campos_Listar;
    private javax.swing.JButton jButton_Campos_Listar_Regresar;
    private javax.swing.JButton jButton_Campos_Modificar;
    private javax.swing.JButton jButton_Campos_Modificar_Regresar;
    private javax.swing.JButton jButton_Campos_Modificat_Confirmar;
    private javax.swing.JButton jButton_Campos_Regresar;
    private javax.swing.JButton jButton_Indices_ReIndexar;
    private javax.swing.JButton jButton_Indicie_Crear;
    private javax.swing.JButton jButton_IntroducirRegistros_crear;
    private javax.swing.JButton jButton_Registros_Buscar;
    private javax.swing.JButton jButton_Registros_Cruzar;
    private javax.swing.JButton jButton_Registros_Cruzar_Cruzar;
    private javax.swing.JButton jButton_Registros_Listar;
    private javax.swing.JButton jButton_Registros_Modificar;
    private javax.swing.JButton jButton_Registros_Prueba;
    private javax.swing.JButton jButton_Registros_Regresar;
    private javax.swing.JButton jButton_Registros_borrar;
    private javax.swing.JButton jButton_Registros_introducir;
    private javax.swing.JButton jButton_estandar_Exportar_Excel;
    private javax.swing.JButton jButton_estandar_Exportar_XML;
    private javax.swing.JComboBox<String> jComboBox_Eliminar;
    private javax.swing.JComboBox<String> jComboBox_Modificar;
    private javax.swing.JComboBox<String> jComboBox_Registros_cruzar1;
    private javax.swing.JComboBox<String> jComboBox_Registros_cruzar2;
    private javax.swing.JDialog jDialog_Campos_Crear;
    private javax.swing.JDialog jDialog_Campos_Eliminar;
    private javax.swing.JDialog jDialog_Campos_Listar;
    private javax.swing.JDialog jDialog_Campos_Modificar;
    private javax.swing.JDialog jDialog_Registros_Introducir;
    private javax.swing.JDialog jDialog_Registros_buscar;
    private javax.swing.JDialog jDialog_Registros_cruzar;
    private javax.swing.JDialog jDialog_Registros_listar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_Archivo_currentFile;
    private javax.swing.JLabel jLabel_Campos_CrearCampo;
    private javax.swing.JLabel jLabel_Campos_CrearCampo1;
    private javax.swing.JLabel jLabel_Campos_Dato;
    private javax.swing.JLabel jLabel_Campos_Eliminar_Campo;
    private javax.swing.JLabel jLabel_Campos_Eliminar_Dato;
    private javax.swing.JLabel jLabel_Campos_Eliminar_Key;
    private javax.swing.JLabel jLabel_Campos_Eliminar_Longitud;
    private javax.swing.JLabel jLabel_Campos_Eliminar_Nombre;
    private javax.swing.JLabel jLabel_Campos_Key;
    private javax.swing.JLabel jLabel_Campos_Longitud;
    private javax.swing.JLabel jLabel_Campos_ModificarCampo;
    private javax.swing.JLabel jLabel_Campos_Modificar_Dato;
    private javax.swing.JLabel jLabel_Campos_Modificar_Key;
    private javax.swing.JLabel jLabel_Campos_Modificar_Longitud;
    private javax.swing.JLabel jLabel_Campos_Modificar_Nombre;
    private javax.swing.JLabel jLabel_Campos_Nombre;
    private javax.swing.JLabel jLabel_Campos_OpcionesCampo;
    private javax.swing.JLabel jLabel_Registros_Cruzar_Archivo1;
    private javax.swing.JLabel jLabel_Registros_Cruzar_Archivo2;
    private javax.swing.JLabel jLabel_Registros_Cruzar_Archivo4;
    private javax.swing.JLabel jLabel_Registros_Cruzar_Archivo5;
    private javax.swing.JLabel jLabel_Registros_Cruzar_Archivo6;
    private javax.swing.JLabel jLabel_Registros_OpcionesRegistros;
    private javax.swing.JLabel jLabel_Registros_OpcionesRegistros1;
    private javax.swing.JLabel jLabel_Registros_OpcionesRegistros4;
    private javax.swing.JLabel jLabel_Registros_OpcionesRegistros5;
    private javax.swing.JLabel jLabel_indices_crearIndices;
    private javax.swing.JList<String> jList_Indices_CrearIndices;
    private javax.swing.JList<String> jList_Indices_ReIndexar;
    private javax.swing.JList<String> jList_Registros_Cruzar_Campos1;
    private javax.swing.JList<String> jList_Registros_Cruzar_Campos2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanel_Archivo;
    private javax.swing.JPanel jPanel_Archivo_crear;
    private javax.swing.JPanel jPanel_Campos;
    private javax.swing.JPanel jPanel_Estandarizacion;
    private javax.swing.JPanel jPanel_Registros;
    private javax.swing.JPanel jPanel_Registros_Cruzar;
    private javax.swing.JPanel jPanel_Registros_panel;
    private javax.swing.JPanel jPanel_indices;
    private javax.swing.JRadioButton jRadioButton_Campos_Bool;
    private javax.swing.JRadioButton jRadioButton_Campos_Char;
    private javax.swing.JRadioButton jRadioButton_Campos_Eliminar_Bool;
    private javax.swing.JRadioButton jRadioButton_Campos_Eliminar_Char;
    private javax.swing.JRadioButton jRadioButton_Campos_Eliminar_Float;
    private javax.swing.JRadioButton jRadioButton_Campos_Eliminar_Int;
    private javax.swing.JRadioButton jRadioButton_Campos_Eliminar_No;
    private javax.swing.JRadioButton jRadioButton_Campos_Eliminar_Si;
    private javax.swing.JRadioButton jRadioButton_Campos_Eliminar_String;
    private javax.swing.JRadioButton jRadioButton_Campos_Float;
    private javax.swing.JRadioButton jRadioButton_Campos_Int;
    private javax.swing.JRadioButton jRadioButton_Campos_Modificar_Bool;
    private javax.swing.JRadioButton jRadioButton_Campos_Modificar_Char;
    private javax.swing.JRadioButton jRadioButton_Campos_Modificar_Float;
    private javax.swing.JRadioButton jRadioButton_Campos_Modificar_Int;
    private javax.swing.JRadioButton jRadioButton_Campos_Modificar_No;
    private javax.swing.JRadioButton jRadioButton_Campos_Modificar_Si;
    private javax.swing.JRadioButton jRadioButton_Campos_Modificar_String;
    private javax.swing.JRadioButton jRadioButton_Campos_No;
    private javax.swing.JRadioButton jRadioButton_Campos_Si;
    private javax.swing.JRadioButton jRadioButton_Campos_String;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSpinner jSpinner_Campos_Longitud;
    private javax.swing.JSpinner jSpinner_Campos_Modificar_Longitud;
    private javax.swing.JTabbedPane jTabbedPane_Menu;
    private javax.swing.JTable jTable_Campos_Listar;
    private javax.swing.JTable jTable_Registro_introducir;
    private javax.swing.JTable jTable_Registros_buscar;
    private javax.swing.JTable jTable_Registros_listar;
    private javax.swing.JTextField jTextField_Archivo_Crear;
    private javax.swing.JTextField jTextField_Campos_Eliminar_Longitud;
    private javax.swing.JTextField jTextField_Campos_Eliminar_Nombre;
    private javax.swing.JTextField jTextField_Campos_Modificar_Nombre;
    private javax.swing.JTextField jTextField_Campos_Nombre;
    // End of variables declaration//GEN-END:variables

    static Archivo archivo1_principal = new Archivo();
    static Archivo archivo2_temporal = new Archivo();
    static BTree btree = new BTree(6);

    public void loadJList(Archivo archivo, JList jlist, JLabel jlabel) {
        DefaultListModel model = new DefaultListModel<>();
        for (Campo campo : archivo.getMetadata().getCampos()) {
            model.add(model.size(), campo.getNombre_campo());
        }
        jlist.setModel(model);
        jlabel.setText(archivo.getFilename());
    }

    boolean check_name(String name) {
        if (name.length() < 50) {
            if (name.matches("[a-zA-Z0-9_]+")) {
                return true;
            }
        }
        return false;
    }

    public void abrirDialog(JDialog pestaña) {
        pestaña.pack();
        pestaña.setModal(true);
        pestaña.setLocationRelativeTo(this);
        pestaña.setVisible(true);
    }

    public void llenar_Tabla(JTable tabla) {
        String tipo = "";
        tabla.setModel(new javax.swing.table.DefaultTableModel(new Object[][]{}, new String[]{
            "Nombre de Campo", "Tipo de Dato", "Longitud", "Llave Primaria?", "Llave Secundaria?"}));
        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
        for (Campo c : archivo1_principal.getMetadata().getCampos()) {
            switch (c.getTipo()) {
                case 0:
                    tipo = "Bool";
                    break;
                case 1:
                    tipo = "Int";
                    break;
                case 2:
                    tipo = "Float";
                    break;
                case 3:
                    tipo = "String";
                    break;
                case 4:
                    tipo = "Char";
                    break;
                default:
                    break;
            }
            Object[] row = {c.getNombre_campo(), tipo, c.getLongitud(), c.isIskey(), c.iskey_secundary};
            modelo.addRow(row);
            tipo = "";
        }
        tabla.setModel(modelo);
    }

    static boolean determineMatch(int type, Object object) {
        switch (type) {
            case 0 -> {
                if (object instanceof Boolean) {
                    return true;
                }
            }
            case 1 -> {
                try {
                    Integer.parseInt((String) object);
                    return true;
                } catch (Exception e) {
                }
            }
            case 2 -> {
                try {
                    Float.parseFloat((String) object);
                    return true;
                } catch (Exception e) {
                }
            }
            case 3 -> {
                if (object instanceof String) {
                    return true;
                }
            }
            case 4 -> {
                if (object instanceof Character) {
                    return true;
                }
            }
        }
        return false;
    }

    public void Select_OpenFile(Archivo archivo) {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("./Registros/"));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos creados para estructura de datos 2", "txt");
        fileChooser.setFileFilter(filter);

        int option = fileChooser.showOpenDialog(this);
        if (option == JFileChooser.APPROVE_OPTION) {
            File selected = fileChooser.getSelectedFile();
            // Verificamos si el archivo1_principal existe antes de intentar abrirlo
            if (selected.exists()) {
                try {
                    archivo.open_file(selected);

                } catch (IOException ex) {
                    Logger.getLogger(Estru2_proyecto.class
                            .getName()).log(Level.SEVERE, null, ex);
                }
                if (archivo.getMetadata() != null) {
                    DefaultListModel model = new DefaultListModel<>();

                    for (Map.Entry<String, Integer> entry : archivo.getMetadata().getKeys().entrySet()) {
                        String campo = entry.getKey();  // Field name (key)
                        Integer position = entry.getValue();  // Position (value)
                        model.add(model.size(), campo);  // If you only need to add the field name to the model
                    }

                    jList_Indices_CrearIndices.setModel(model);
                    jLabel_indices_crearIndices.setText(archivo.getFilename());
                }
                btree = cargarArbolDesdeArchivo(archivo, archivo.getMetadata().getKeyElement().getNombre_campo());
                if (btree == null) {
                    btree = new BTree(6);
                }
            } else {
                JOptionPane.showMessageDialog(null, "El archivo no existe: " + selected.getName());
            }

        }

        jLabel_Archivo_currentFile.setText("Archivo Abierto: " + archivo1_principal.getFilename());
    }

    public void guardarArbolEnArchivo(Archivo archivo, String fieldname, BTree btree) {
        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("./ArbolesB/" + archivo.getFilename() + "-" + fieldname + ".dat"))) {
            btree.setFather_filepath(archivo.getFileRegistros().getPath());
            System.out.println(btree.getFather_filepath());
            oos.writeObject(btree);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error al guardar el árbol B en el archivo: " + e.getMessage());
        }
    }

    private BTree cargarArbolDesdeArchivo(Archivo archivo, String fieldname) {
        String filename = "./ArbolesB/" + archivo.getFilename() + "-" + fieldname + ".dat"; // Nombre completo del archivo
        File file = new File(filename);

        if (!file.exists()) {
            JOptionPane.showMessageDialog(null, "El archivo no existe: " + filename);
            return null;
        }

        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(filename))) {
            return (BTree) ois.readObject();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error al cargar el archivo: " + e.getMessage());
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "No se pudo encontrar la clase BTree: " + e.getMessage());
        }
        return null;
    }

    public void loadJComboBox(Archivo archivo, JComboBox jcombobox) {
        jcombobox.removeAllItems();
        if (archivo.getMetadata() == null) {
            archivo.LoadMetaData();
        }
        for (String key : archivo.getMetadata().getKeys().keySet()) {
            jcombobox.addItem(key);
        }

    }

    private void Cruzar() {

        String Key1_name = jComboBox_Registros_cruzar1.getSelectedItem().toString();
        int Key1_pos = archivo1_principal.getMetadata().getKeys().get(Key1_name);

        String Key2_name = jComboBox_Registros_cruzar2.getSelectedItem().toString();
        int Key2_pos = archivo2_temporal.getMetadata().getKeys().get(Key2_name);

        if (archivo1_principal.getMetadata().getCampos().get(Key1_pos).getTipo() != archivo2_temporal.getMetadata().getCampos().get(Key2_pos).getTipo()) {
            JOptionPane.showMessageDialog(jDialog_Registros_cruzar, "Error: No se pudo relacionar los campos selecionados");
            return;
        }
        BTree btree_temporal_1 = cargarArbolDesdeArchivo(archivo1_principal, Key1_name);
        if (btree_temporal_1 == null) {
            return;
        }
        BTree btree_temporal_2 = cargarArbolDesdeArchivo(archivo2_temporal, Key2_name);
        if (btree_temporal_2 == null) {
            return;
        }
        File cross = new File("./CrossFiles/" + archivo1_principal.getFilename() + "-" + archivo2_temporal.getFilename() + ".txt");
        if (cross.exists()) {
            cross.delete();
        } else {
            try {
                cross.createNewFile();

            } catch (IOException ex) {
                Logger.getLogger(Estru2_proyecto.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }

        btree_temporal_1.CrossTree(btree_temporal_2,
                cross,
                archivo1_principal,
                archivo2_temporal,
                jList_Registros_Cruzar_Campos1.getSelectedIndices(),
                jList_Registros_Cruzar_Campos2.getSelectedIndices()
        );
        try {
            JOptionPane.showMessageDialog(jDialog_Registros_cruzar, "Se creo el archivo cruzado en: " + cross.getCanonicalPath());

        } catch (IOException ex) {
            Logger.getLogger(Estru2_proyecto.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void exportarDatosAExcel() {
        Exportar_Excel x = new Exportar_Excel();
        JTable pepe = new JTable(); // Crear tabla para los datos

        if (archivo1_principal.getFilename() == null || archivo1_principal.getFilename().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Error: Abra o cree un archivo antes");
            return;
        }

        long registros = archivo1_principal.cant_Registros();
        if (registros == 0) {
            JOptionPane.showMessageDialog(null, "Intente ingresar registros antes de exportar");
            return;
        }

        // Obtener los nombres de las columnas desde los campos de la metadata
        ArrayList<Campo> campos = archivo1_principal.getMetadata().getCampos();
        int columnas = campos.size();

        // Crear matriz de datos para la tabla directamente
        String[] nombresColumnas = new String[columnas];
        for (int i = 0; i < columnas; i++) {
            nombresColumnas[i] = campos.get(i).getNombre_campo();
        }

        Object[][] datos = new Object[(int) registros][columnas];
        int cont = 0;
        for (int i = 0; i < registros; i++) {
            Registro registro = archivo1_principal.LoadRegistro(i);
            if (!registro.isBorrado()) {
                ArrayList<Object> valores = registro.getData();
                for (int j = 0; j < columnas; j++) {
                    datos[i - cont][j] = valores.get(j);
                }
            } else {
                cont++;
            }
        }

        // Asignar nombres de columnas y datos directamente a la tabla
        pepe.setModel(new javax.swing.table.DefaultTableModel(datos, nombresColumnas));

        // Exportar directamente
        try {
            x.exportar(pepe);
        } catch (IOException ex) {
            Logger.getLogger(Estru2_proyecto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void CrearRegistrosPrueba_archivoPersona(String filename, File NombreArchivo) {
        ArrayList<Campo> campos = new ArrayList<>();
        // llave 1
        campos.add(new Campo("PersonId", 1, 1, true, false));
        // lalve 2
        campos.add(new Campo("CityId", 1, 1, false, true));
        campos.add(new Campo("PersonName", 3, 20, false, false));
        campos.add(new Campo("PersonAge", 1, 1, false, false));

        Metadata temp_meta = new Metadata(-1, campos, 0, 1, -1);
        Archivo archivo_temp = new Archivo();
        archivo_temp.setFileRegistros(NombreArchivo);
        archivo_temp.setFilename(filename);
        archivo_temp.setMetadata(temp_meta);

        try {
            archivo_temp.addMetadataToFile();
        } catch (IOException ex) {
            Logger.getLogger(Estru2_proyecto.class.getName()).log(Level.SEVERE, null, ex);
        }

        ArrayList<Object> datos;
        BTree temp_btree = new BTree(6);
        Random random = new Random();
        try {
            for (int i = 0; i < 10000; i++) {
                datos = new ArrayList<>();
                datos.add(i);
                datos.add(i);
                datos.add("Person" + i);
                datos.add(18 + random.nextInt(83));
                Registro registro = new Registro(datos);
                archivo_temp.introducirRegistro(registro);
                temp_btree.insert(new Llave((Comparable) i, i));
            }
            guardarArbolEnArchivo(archivo_temp, "PersonId", temp_btree);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error");
        }
        JOptionPane.showMessageDialog(null, "Se han cargado de manera exitosa los archivos");
    }

    private void CrearRegistrosPrueba_archivoCuidad(String filename, File NombreArchivo) {
        ArrayList<Campo> campos = new ArrayList<>();
        //llave primaria
        campos.add(new Campo("CityId", 1, 1, true, false));
        //llave secundaria
        campos.add(new Campo("CityName", 3, 25, false, true));
        Metadata temp_meta = new Metadata(-1, campos, 0, 1, -1);
        Archivo archivo_temp = new Archivo();
        archivo_temp.setFileRegistros(NombreArchivo);
        archivo_temp.setFilename(filename);
        archivo_temp.setMetadata(temp_meta);
        try {
            archivo_temp.addMetadataToFile();

        } catch (IOException ex) {
            Logger.getLogger(Estru2_proyecto.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        ArrayList datos;
        BTree temp_btree = new BTree(6);
        Random random = new Random();
        try {
            for (int i = 0; i < 10000; i++) {
                datos = new ArrayList();
                datos.add(i);
                datos.add("City" + i);
                Registro registro = new Registro(datos);
                archivo_temp.introducirRegistro(registro);
                temp_btree.insert(new Llave((Comparable) i, i));
            }
            guardarArbolEnArchivo(archivo_temp, "CityId", temp_btree);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error");
        }
        JOptionPane.showMessageDialog(null, "Se han cargado de manera exitosa los archivos");
    }
}
